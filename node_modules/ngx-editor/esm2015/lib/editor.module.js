import { NgModule, InjectionToken } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgxEditorComponent } from './editor.component';
import { NgxEditorServiceConfig, provideMyServiceOptions } from './editor.service';
import { MenuModule } from './modules/menu/menu.module';
import { BubbleComponent } from './components/bubble/bubble.component';
import { SharedService } from './services/shared/shared.service';
import * as ɵngcc0 from '@angular/core';
const NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');
export class NgxEditorModule {
    static forRoot(config) {
        return {
            ngModule: NgxEditorModule,
            providers: [
                {
                    provide: NGX_EDITOR_CONFIG_TOKEN,
                    useValue: config
                },
                {
                    provide: NgxEditorServiceConfig,
                    useFactory: provideMyServiceOptions,
                    deps: [NGX_EDITOR_CONFIG_TOKEN]
                }
            ]
        };
    }
}
NgxEditorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxEditorModule });
NgxEditorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxEditorModule_Factory(t) { return new (t || NgxEditorModule)(); }, providers: [
        SharedService
    ], imports: [[
            CommonModule,
            MenuModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxEditorModule, { declarations: function () { return [NgxEditorComponent,
        BubbleComponent]; }, imports: function () { return [CommonModule,
        MenuModule]; }, exports: function () { return [NgxEditorComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxEditorModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    MenuModule,
                ],
                providers: [
                    SharedService
                ],
                declarations: [
                    NgxEditorComponent,
                    BubbleComponent
                ],
                exports: [NgxEditorComponent],
                entryComponents: [BubbleComponent]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdG9yLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYi9lZGl0b3IubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFJL0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDeEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLHVCQUF1QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbkYsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRXhELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUN2RSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7O0FBRWpFLE1BQU0sdUJBQXVCLEdBQUcsSUFBSSxjQUFjLENBQWtCLGlCQUFpQixDQUFDLENBQUM7QUFrQnZGLE1BQU0sT0FBTyxlQUFlO0FBQzVCLElBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUF1QjtBQUFJLFFBRXhDLE9BQU87QUFDWCxZQUFNLFFBQVEsRUFBRSxlQUFlO0FBQy9CLFlBQU0sU0FBUyxFQUFFO0FBQ2pCLGdCQUFRO0FBQ1Isb0JBQVUsT0FBTyxFQUFFLHVCQUF1QjtBQUMxQyxvQkFBVSxRQUFRLEVBQUUsTUFBTTtBQUMxQixpQkFBUztBQUNULGdCQUFRO0FBQ1Isb0JBQVUsT0FBTyxFQUFFLHNCQUFzQjtBQUN6QyxvQkFBVSxVQUFVLEVBQUUsdUJBQXVCO0FBQzdDLG9CQUFVLElBQUksRUFBRSxDQUFDLHVCQUF1QixDQUFDO0FBQ3pDLGlCQUFTO0FBQ1QsYUFBTztBQUNQLFNBQUssQ0FBQztBQUNOLElBQUUsQ0FBQztBQUNIOzJDQWxDQyxRQUFRLFNBQUM7R0FDUixPQUFPLEVBQUUsc0JBQ1AsWUFBWSxzQkFDWixVQUFVLG1CQUNYLGtCQUNELFNBQVMsRUFBRSxzQkFDVDtZQUFhO1FBQ2Q7T0FDRCxZQUFZLEVBQUU7aUJBQ1o7V0FBa0I7a0JBQ2xCLGVBQWUsa0JBQ2hCLGtCQUNELE9BQU8sRUFBRSxDQUFDLGtCQUFrQixDQUFDLGtCQUM3QixlQUFlLEVBQUUsQ0FBQyxlQUFlLENBQUMsY0FDbkM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUVHO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycywgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IE5neEVkaXRvckNvbmZpZyB9IGZyb20gJy4vdHlwZXMnO1xuXG5pbXBvcnQgeyBOZ3hFZGl0b3JDb21wb25lbnQgfSBmcm9tICcuL2VkaXRvci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmd4RWRpdG9yU2VydmljZUNvbmZpZywgcHJvdmlkZU15U2VydmljZU9wdGlvbnMgfSBmcm9tICcuL2VkaXRvci5zZXJ2aWNlJztcbmltcG9ydCB7IE1lbnVNb2R1bGUgfSBmcm9tICcuL21vZHVsZXMvbWVudS9tZW51Lm1vZHVsZSc7XG5cbmltcG9ydCB7IEJ1YmJsZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9idWJibGUvYnViYmxlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTaGFyZWRTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9zaGFyZWQvc2hhcmVkLnNlcnZpY2UnO1xuXG5jb25zdCBOR1hfRURJVE9SX0NPTkZJR19UT0tFTiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxOZ3hFZGl0b3JDb25maWc+KCdOZ3hFZGl0b3JDb25maWcnKTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBNZW51TW9kdWxlLFxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICBTaGFyZWRTZXJ2aWNlXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIE5neEVkaXRvckNvbXBvbmVudCxcbiAgICBCdWJibGVDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW05neEVkaXRvckNvbXBvbmVudF0sXG4gIGVudHJ5Q29tcG9uZW50czogW0J1YmJsZUNvbXBvbmVudF1cbn0pXG5cbmV4cG9ydCBjbGFzcyBOZ3hFZGl0b3JNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdChjb25maWc6IE5neEVkaXRvckNvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8Tmd4RWRpdG9yTW9kdWxlPiB7XG5cbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IE5neEVkaXRvck1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogTkdYX0VESVRPUl9DT05GSUdfVE9LRU4sXG4gICAgICAgICAgdXNlVmFsdWU6IGNvbmZpZ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogTmd4RWRpdG9yU2VydmljZUNvbmZpZyxcbiAgICAgICAgICB1c2VGYWN0b3J5OiBwcm92aWRlTXlTZXJ2aWNlT3B0aW9ucyxcbiAgICAgICAgICBkZXBzOiBbTkdYX0VESVRPUl9DT05GSUdfVE9LRU5dXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9O1xuICB9XG59XG4iXX0=