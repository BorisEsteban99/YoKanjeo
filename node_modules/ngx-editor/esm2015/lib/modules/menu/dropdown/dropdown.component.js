import { Component, ElementRef, HostBinding, HostListener, Input } from '@angular/core';
import { NgxEditorService } from '../../../editor.service';
import { SharedService } from '../../../services/shared/shared.service';
import { SimpleCommands } from '../MenuCommands';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../editor.service';
import * as ɵngcc2 from '../../../services/shared/shared.service';
import * as ɵngcc3 from '@angular/common';

const _c0 = function (a0, a1) { return { "NgxEditor__Dropdown--Active": a0, "NgxEditor--Disabled": a1 }; };
function DropdownComponent_div_2_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 4);
    ɵngcc0.ɵɵlistener("mousedown", function DropdownComponent_div_2_div_1_Template_div_mousedown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const item_r2 = ctx.$implicit; const ctx_r3 = ɵngcc0.ɵɵnextContext(2); return ctx_r3.onClick($event, item_r2); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(2, _c0, item_r2 === ctx_r1.activeItem, ctx_r1.disabledItems.includes(item_r2)));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.getName(item_r2), " ");
} }
function DropdownComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtemplate(1, DropdownComponent_div_2_div_1_Template, 2, 5, "div", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.items);
} }
export class DropdownComponent {
    constructor(ngxeService, sharedService, el) {
        this.ngxeService = ngxeService;
        this.sharedService = sharedService;
        this.el = el;
        this.isDropdownOpen = false;
        this.activeItems = [];
        this.disabledItems = [];
        this.update = (view) => {
            const { state } = view;
            this.activeItems = [];
            this.disabledItems = [];
            this.items.forEach((item) => {
                const command = SimpleCommands.get(item);
                const isActive = command.isActive(state);
                if (isActive) {
                    this.activeItems.push(item);
                }
                if (!command.canExecute(state)) {
                    this.disabledItems.push(item);
                }
            });
            if (this.activeItems.length === 1) {
                this.activeItem = this.activeItems[0];
            }
            else {
                this.activeItem = null;
            }
        };
        this.editorView = this.sharedService.view;
        this.pluginUpdateSubscription = this.sharedService.plugin.update.subscribe((view) => {
            this.update(view);
        });
    }
    get isSelected() {
        return Boolean(this.activeItem || this.isDropdownOpen);
    }
    get isDropdownDisabled() {
        return this.disabledItems.length === this.items.length;
    }
    onDocumentClick(target) {
        if (!this.el.nativeElement.contains(target) && this.isDropdownOpen) {
            this.isDropdownOpen = false;
        }
    }
    getName(key) {
        return this.ngxeService.locals.get(key);
    }
    toggleDropdown(e) {
        e.preventDefault();
        this.isDropdownOpen = !this.isDropdownOpen;
    }
    onClick(e, item) {
        e.preventDefault();
        // consider only left click
        if (e.button !== 0) {
            return;
        }
        const command = SimpleCommands.get(item);
        const { state, dispatch } = this.editorView;
        command.execute(state, dispatch);
        this.isDropdownOpen = false;
    }
    ngOnInit() {
        this.selected = this.group;
    }
    ngOnDestroy() {
        this.pluginUpdateSubscription.unsubscribe();
    }
}
DropdownComponent.ɵfac = function DropdownComponent_Factory(t) { return new (t || DropdownComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgxEditorService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.SharedService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
DropdownComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DropdownComponent, selectors: [["ngx-dropdown"]], hostVars: 4, hostBindings: function DropdownComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("mousedown", function DropdownComponent_mousedown_HostBindingHandler($event) { return ctx.onDocumentClick($event.target); }, false, ɵngcc0.ɵɵresolveDocument);
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("NgxEditor__Dropdown--Selected", ctx.isSelected)("NgxEditor--Disabled", ctx.isDropdownDisabled);
    } }, inputs: { group: "group", items: "items" }, decls: 3, vars: 2, consts: [[1, "NgxEditor__Dropdown--Text", 3, "mousedown"], ["class", "NgxEditor__Dropdown--DropdownMenu", 4, "ngIf"], [1, "NgxEditor__Dropdown--DropdownMenu"], ["class", "NgxEditor__Dropdown--Item", 3, "ngClass", "mousedown", 4, "ngFor", "ngForOf"], [1, "NgxEditor__Dropdown--Item", 3, "ngClass", "mousedown"]], template: function DropdownComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("mousedown", function DropdownComponent_Template_div_mousedown_0_listener($event) { return ctx.toggleDropdown($event); });
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, DropdownComponent_div_2_Template, 2, 1, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.getName(ctx.activeItem || ctx.selected), "\n");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isDropdownOpen);
    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgForOf, ɵngcc3.NgClass], styles: [""] });
DropdownComponent.ctorParameters = () => [
    { type: NgxEditorService },
    { type: SharedService },
    { type: ElementRef }
];
DropdownComponent.propDecorators = {
    group: [{ type: Input }],
    items: [{ type: Input }],
    isSelected: [{ type: HostBinding, args: ['class.NgxEditor__Dropdown--Selected',] }],
    isDropdownDisabled: [{ type: HostBinding, args: ['class.NgxEditor--Disabled',] }],
    onDocumentClick: [{ type: HostListener, args: ['document:mousedown', ['$event.target'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DropdownComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-dropdown',
                template: "<div class=\"NgxEditor__Dropdown--Text\" (mousedown)=\"toggleDropdown($event)\">\n  {{getName(activeItem || selected)}}\n</div>\n\n<div class=\"NgxEditor__Dropdown--DropdownMenu\" *ngIf=\"isDropdownOpen\">\n  <div class=\"NgxEditor__Dropdown--Item\" *ngFor=\"let item of items\" (mousedown)=\"onClick($event, item)\"\n    [ngClass]=\"{'NgxEditor__Dropdown--Active': item === activeItem, 'NgxEditor--Disabled':disabledItems.includes(item)}\">\n    {{getName(item)}}\n  </div>\n</div>\n",
                styles: [""]
            }]
    }], function () { return [{ type: ɵngcc1.NgxEditorService }, { type: ɵngcc2.SharedService }, { type: ɵngcc0.ElementRef }]; }, { isSelected: [{
            type: HostBinding,
            args: ['class.NgxEditor__Dropdown--Selected']
        }], isDropdownDisabled: [{
            type: HostBinding,
            args: ['class.NgxEditor--Disabled']
        }], onDocumentClick: [{
            type: HostListener,
            args: ['document:mousedown', ['$event.target']]
        }], group: [{
            type: Input
        }], items: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,