import { Component, ElementRef, HostBinding, HostListener, Input } from '@angular/core';
import Icon from '../../../icons';
import { NgxEditorService } from '../../../editor.service';
import { SharedService } from '../../../services/shared/shared.service';
import { TextColor, TextBackgroundColor } from '../MenuCommands';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../../services/shared/shared.service';
import * as ɵngcc2 from '../../../editor.service';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '../../../pipes/sanitize/sanitize-html.pipe';

const _c0 = function (a0, a1) { return { backgroundColor: a0, color: a1 }; };
const _c1 = function (a0) { return { "NgxEditor__Color--Active": a0 }; };
function ColorPickerComponent_div_2_div_1_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 7);
    ɵngcc0.ɵɵlistener("mousedown", function ColorPickerComponent_div_2_div_1_button_1_Template_button_mousedown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const color_r4 = ctx.$implicit; const ctx_r5 = ɵngcc0.ɵɵnextContext(3); return ctx_r5.onColorSelect($event, color_r4); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const color_r4 = ctx.$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction2(3, _c0, color_r4, ctx_r3.getContrastYIQ(color_r4)))("title", color_r4)("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c1, ctx_r3.activeColors.includes(color_r4)));
} }
function ColorPickerComponent_div_2_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵtemplate(1, ColorPickerComponent_div_2_div_1_button_1_Template, 1, 8, "button", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const colorGroup_r2 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", colorGroup_r2);
} }
function ColorPickerComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtemplate(1, ColorPickerComponent_div_2_div_1_Template, 2, 1, "div", 3);
    ɵngcc0.ɵɵelementStart(2, "button", 4);
    ɵngcc0.ɵɵlistener("mousedown", function ColorPickerComponent_div_2_Template_button_mousedown_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.remove($event); });
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.presets);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r0.isActive);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.getLabel("remove"), " ");
} }
export class ColorPickerComponent {
    constructor(el, sharedService, ngxeService) {
        this.el = el;
        this.sharedService = sharedService;
        this.ngxeService = ngxeService;
        this.showPopup = false;
        this.isActive = false;
        this.activeColors = [];
        this.canExecute = true;
        this.update = (view) => {
            const { state } = view;
            this.canExecute = this.command.execute(null)(state);
            this.isActive = this.command.isActive(state);
            this.activeColors = [];
            if (this.isActive) {
                this.activeColors = this.command.getActiveColors(state);
            }
        };
        this.editorView = this.sharedService.view;
        this.pluginUpdateSubscription = this.sharedService.plugin.update.subscribe((view) => {
            this.update(view);
        });
    }
    get valid() {
        return this.isActive || this.showPopup;
    }
    get disabled() {
        return !this.canExecute;
    }
    get presets() {
        return this.ngxeService.colorPresets;
    }
    get title() {
        return this.getLabel(this.type === 'text_color' ? 'text_color' : 'background_color');
    }
    get icon() {
        return Icon.get(this.type === 'text_color' ? 'text_color' : 'color_fill');
    }
    get command() {
        return this.type === 'text_color' ? TextColor : TextBackgroundColor;
    }
    getContrastYIQ(hexcolor) {
        hexcolor = hexcolor.replace('#', '');
        const r = parseInt(hexcolor.substr(0, 2), 16);
        const g = parseInt(hexcolor.substr(2, 2), 16);
        const b = parseInt(hexcolor.substr(4, 2), 16);
        const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;
        return (yiq >= 128) ? 'black' : 'white';
    }
    onDocumentClick(e) {
        if (!this.el.nativeElement.contains(e.target) && this.showPopup) {
            this.hidePopup();
        }
    }
    hidePopup() {
        this.showPopup = false;
    }
    togglePopup(e) {
        e.preventDefault();
        if (e.button !== 0) {
            return;
        }
        this.showPopup = !this.showPopup;
    }
    remove(e) {
        e.preventDefault();
        const { state, dispatch } = this.editorView;
        this.command.remove(state, dispatch);
        this.hidePopup();
    }
    onColorSelect(e, color) {
        e.preventDefault();
        if (e.button !== 0) {
            return;
        }
        const { state, dispatch } = this.editorView;
        const attrs = {};
        if (this.type === 'text_color') {
            attrs.color = color;
        }
        else {
            attrs.backgroundColor = color;
        }
        this.command.execute(attrs)(state, dispatch);
        if (!this.editorView.hasFocus()) {
            this.editorView.focus();
        }
        this.hidePopup();
    }
    getLabel(key) {
        return this.ngxeService.locals.get(key);
    }
    ngOnDestroy() {
        this.pluginUpdateSubscription.unsubscribe();
    }
}
ColorPickerComponent.ɵfac = function ColorPickerComponent_Factory(t) { return new (t || ColorPickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SharedService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgxEditorService)); };
ColorPickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ColorPickerComponent, selectors: [["ngx-color-picker"]], hostVars: 4, hostBindings: function ColorPickerComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("mousedown", function ColorPickerComponent_mousedown_HostBindingHandler($event) { return ctx.onDocumentClick($event); }, false, ɵngcc0.ɵɵresolveDocument);
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("NgxEditor__MenuItem--Active", ctx.valid)("NgxEditor--Disabled", ctx.disabled);
    } }, inputs: { type: "type" }, decls: 3, vars: 5, consts: [[1, "NgxEditor__MenuItem--IconContainer", 3, "innerHTML", "title", "mousedown"], ["class", "NgxEditor__Popup", 4, "ngIf"], [1, "NgxEditor__Popup"], ["class", "NgxEditor__ColorContainer", 4, "ngFor", "ngForOf"], [1, "NgxEditor__MenuItem--Button", 3, "disabled", "mousedown"], [1, "NgxEditor__ColorContainer"], ["class", "NgxEditor__Color", 3, "ngStyle", "title", "ngClass", "mousedown", 4, "ngFor", "ngForOf"], [1, "NgxEditor__Color", 3, "ngStyle", "title", "ngClass", "mousedown"]], template: function ColorPickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("mousedown", function ColorPickerComponent_Template_div_mousedown_0_listener($event) { return ctx.togglePopup($event); });
        ɵngcc0.ɵɵpipe(1, "sanitizeHtml");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, ColorPickerComponent_div_2_Template, 4, 3, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("innerHTML", ɵngcc0.ɵɵpipeBind1(1, 3, ctx.icon), ɵngcc0.ɵɵsanitizeHtml)("title", ctx.title);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showPopup);
    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgForOf, ɵngcc3.NgStyle, ɵngcc3.NgClass], pipes: [ɵngcc4.SanitizeHtmlPipe], styles: ["@charset \"UTF-8\";.NgxEditor__Popup[_ngcontent-%COMP%]{width:230px}.NgxEditor__ColorContainer[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.NgxEditor__ColorContainer[_ngcontent-%COMP%] + .NgxEditor__ColorContainer[_ngcontent-%COMP%]{margin-top:5px}.NgxEditor__Color[_ngcontent-%COMP%]{border:none;border-radius:6px;flex-shrink:0;height:24px;outline:none;width:24px}.NgxEditor__Color--Active[_ngcontent-%COMP%]:after{content:\"\u2714\";font-size:90%}.NgxEditor__MenuItem--Button[_ngcontent-%COMP%]{margin-top:5px}"] });
ColorPickerComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: SharedService },
    { type: NgxEditorService }
];
ColorPickerComponent.propDecorators = {
    valid: [{ type: HostBinding, args: ['class.NgxEditor__MenuItem--Active',] }],
    disabled: [{ type: HostBinding, args: ['class.NgxEditor--Disabled',] }],
    type: [{ type: Input }],
    onDocumentClick: [{ type: HostListener, args: ['document:mousedown', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ColorPickerComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-color-picker',
                template: "<div class=\"NgxEditor__MenuItem--IconContainer\" [innerHTML]=\"icon | sanitizeHtml\" (mousedown)=\"togglePopup($event)\"\n  [title]=\"title\">\n</div>\n\n<div *ngIf=\"showPopup\" class=\"NgxEditor__Popup\">\n  <div *ngFor=\"let colorGroup of presets\" class=\"NgxEditor__ColorContainer\">\n    <button class=\"NgxEditor__Color\" *ngFor=\"let color of colorGroup\"\n      [ngStyle]=\"{backgroundColor: color, color:getContrastYIQ(color)}\" [title]=\"color\"\n      (mousedown)=\"onColorSelect($event, color)\"\n      [ngClass]=\"{'NgxEditor__Color--Active': activeColors.includes(color)}\"></button>\n  </div>\n\n  <button class=\"NgxEditor__MenuItem--Button\" (mousedown)=\"remove($event)\" [disabled]=\"!isActive\">\n    {{getLabel('remove')}}\n  </button>\n</div>\n",
                styles: ["@charset \"UTF-8\";.NgxEditor__Popup{width:230px}.NgxEditor__ColorContainer{display:flex;justify-content:space-between}.NgxEditor__ColorContainer+.NgxEditor__ColorContainer{margin-top:5px}.NgxEditor__Color{border:none;border-radius:6px;flex-shrink:0;height:24px;outline:none;width:24px}.NgxEditor__Color--Active:after{content:\"\u2714\";font-size:90%}.NgxEditor__MenuItem--Button{margin-top:5px}"]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.SharedService }, { type: ɵngcc2.NgxEditorService }]; }, { valid: [{
            type: HostBinding,
            args: ['class.NgxEditor__MenuItem--Active']
        }], disabled: [{
            type: HostBinding,
            args: ['class.NgxEditor--Disabled']
        }], onDocumentClick: [{
            type: HostListener,
            args: ['document:mousedown', ['$event']]
        }], type: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,