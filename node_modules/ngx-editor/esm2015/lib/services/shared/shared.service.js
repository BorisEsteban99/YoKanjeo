import * as ɵngcc0 from '@angular/core';
var _view;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export class SharedService {
    constructor() {
        _view.set(this, void 0);
        this.customMenuRefChange = new Subject();
        this.plugin = {
            update: new Subject(),
            destroy: new Subject()
        };
    }
    set view(v) {
        __classPrivateFieldSet(this, _view, v);
    }
    get view() {
        return __classPrivateFieldGet(this, _view);
    }
    setCustomMenuRef(c) {
        this.customMenuRefChange.next(c);
    }
}
SharedService.ɵfac = function SharedService_Factory(t) { return new (t || SharedService)(); };
_view = new WeakMap();
SharedService.ɵprov = i0.ɵɵdefineInjectable({ factory: function SharedService_Factory() { return new SharedService(); }, token: SharedService, providedIn: "root" });
SharedService.ctorParameters = () => [];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SharedService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmVkLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvc2VydmljZXMvc2hhcmVkL3NoYXJlZC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQWUsTUFBTSxlQUFlLENBQUM7QUFFeEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMvQjtBQUlBLE1BQU0sT0FBTyxhQUFhO0FBQzFCLElBUUU7QUFBZ0IsUUFSaEIsd0JBQWtCO0FBQ3BCLFFBQUUsd0JBQW1CLEdBQThCLElBQUksT0FBTyxFQUFvQixDQUFDO0FBQ25GLFFBQ0UsV0FBTSxHQUFHO0FBQ1gsWUFBSSxNQUFNLEVBQUUsSUFBSSxPQUFPLEVBQWM7QUFDckMsWUFBSSxPQUFPLEVBQUcsSUFBSSxPQUFPLEVBQVE7QUFDakMsU0FBRyxDQUFDO0FBQ0osSUFDa0IsQ0FBQztBQUNuQixJQUNFLElBQUksSUFBSSxDQUFDLENBQWE7QUFDeEIsUUFBSSx1QkFBQSxJQUFJLFNBQVMsQ0FBQyxFQUFDO0FBQ25CLElBQUUsQ0FBQztBQUNILElBQ0UsSUFBSSxJQUFJO0FBQUssUUFDWCwyQ0FBa0I7QUFDdEIsSUFBRSxDQUFDO0FBQ0gsSUFDRSxnQkFBZ0IsQ0FBQyxDQUFtQjtBQUFJLFFBQ3RDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckMsSUFBRSxDQUFDO0FBQ0g7OEZBQUM7QUFDRDtBQUF1QixxS0F2QmxCO0FBQUM7QUFITCxVQUFVLFNBQUMsa0JBQ1YsVUFBVSxFQUFFLE1BQU0sY0FDbkI7Ozs7O2dEQUVnQjtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEVkaXRvclZpZXcgfSBmcm9tICdwcm9zZW1pcnJvci12aWV3JztcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgU2hhcmVkU2VydmljZSB7XG4gICN2aWV3OiBFZGl0b3JWaWV3O1xuICBjdXN0b21NZW51UmVmQ2hhbmdlOiBTdWJqZWN0PFRlbXBsYXRlUmVmPGFueT4+ID0gbmV3IFN1YmplY3Q8VGVtcGxhdGVSZWY8YW55Pj4oKTtcblxuICBwbHVnaW4gPSB7XG4gICAgdXBkYXRlOiBuZXcgU3ViamVjdDxFZGl0b3JWaWV3PigpLFxuICAgIGRlc3Ryb3k6ICBuZXcgU3ViamVjdDx2b2lkPigpXG4gIH07XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBzZXQgdmlldyh2OiBFZGl0b3JWaWV3KSB7XG4gICAgdGhpcy4jdmlldyA9IHY7XG4gIH1cblxuICBnZXQgdmlldygpOiBFZGl0b3JWaWV3IHtcbiAgICByZXR1cm4gdGhpcy4jdmlldztcbiAgfVxuXG4gIHNldEN1c3RvbU1lbnVSZWYoYzogVGVtcGxhdGVSZWY8YW55Pik6IHZvaWQge1xuICAgIHRoaXMuY3VzdG9tTWVudVJlZkNoYW5nZS5uZXh0KGMpO1xuICB9XG59XG4iXX0=