{"version":3,"file":"ngx-editor-commands.js","sources":["../../../src/commands/removeLink.ts","../../../src/commands/applyMark.ts","../../../src/commands/ngx-editor-commands.ts"],"names":[],"mappings":"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","sourcesContent":["import { EditorState, Transaction } from 'prosemirror-state';\n\nexport const removeLink = () => {\n  return (state: EditorState, dispatch?: (tr: Transaction) => void): boolean => {\n    const { doc, selection, tr } = state;\n    const { $head: { pos }, from, to } = selection;\n\n    // if the cursor is on the link without any selection\n    if (from === to) {\n      const $pos = doc.resolve(pos);\n      const linkStart = pos - $pos.textOffset;\n      const linkEnd = linkStart + $pos.parent.child($pos.index()).nodeSize;\n\n      tr.removeMark(linkStart, linkEnd);\n    } else {\n      tr.removeMark(from, to);\n    }\n\n    if (!tr.docChanged) {\n      return false;\n    }\n\n    dispatch?.(tr);\n    return true;\n  };\n};\n\nexport default removeLink;\n","import { MarkType, Node as PrmosemirroNode } from 'prosemirror-model';\nimport { EditorState, SelectionRange, TextSelection, Transaction } from 'prosemirror-state';\n\n// Ref: https://github.com/ProseMirror/prosemirror-commands/blob/master/src/commands.js\n\nfunction markApplies(doc: PrmosemirroNode, ranges: SelectionRange[], type: MarkType): boolean {\n  for (const range of ranges) {\n    const { $from, $to } = range;\n\n    let canApply = $from.depth === 0 ? doc.type.allowsMarkType(type) : false;\n\n    doc.nodesBetween($from.pos, $to.pos, (node: PrmosemirroNode): boolean => {\n      if (canApply) {\n        return false;\n      }\n\n      canApply = node.inlineContent && node.type.allowsMarkType(type);\n      return true;\n    });\n\n    if (canApply) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport const applyMark = (type: MarkType, attrs: Record<string, any> = {}) => {\n  return (state: EditorState, dispatch?: (tr: Transaction) => void): boolean => {\n    const { tr, selection } = state;\n    const { $from, $to, empty, ranges } = selection;\n\n    if (empty && selection instanceof TextSelection) {\n      const { $cursor } = selection;\n\n      if (!$cursor || !markApplies(state.doc, ranges, type)) {\n        return false;\n      }\n\n      tr.addStoredMark(type.create(attrs));\n      dispatch?.(tr);\n    } else {\n      tr.addMark($from.pos, $to.pos, type.create(attrs));\n\n      if (!tr.docChanged) {\n        return false;\n      }\n      dispatch?.(tr.scrollIntoView());\n    }\n\n    return true;\n  };\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}