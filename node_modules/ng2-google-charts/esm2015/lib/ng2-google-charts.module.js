import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { GoogleChartComponent } from './google-chart/google-chart.component';
import { GoogleChartsLoaderService } from './google-charts-loader.service';
import { GoogleChartsDashboardComponent } from './google-charts-dashboard/google-charts-dashboard.component';
import { GoogleChartsControlComponent } from './google-charts-control/google-charts-control.component';
import * as ɵngcc0 from '@angular/core';
let Ng2GoogleChartsModule = class Ng2GoogleChartsModule {
};
Ng2GoogleChartsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: Ng2GoogleChartsModule });
Ng2GoogleChartsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function Ng2GoogleChartsModule_Factory(t) { return new (t || Ng2GoogleChartsModule)(); }, providers: [
        GoogleChartsLoaderService
    ] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2GoogleChartsModule, { declarations: function () { return [GoogleChartComponent,
        GoogleChartsDashboardComponent,
        GoogleChartsControlComponent]; }, exports: function () { return [GoogleChartComponent,
        GoogleChartsDashboardComponent,
        GoogleChartsControlComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Ng2GoogleChartsModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    GoogleChartComponent,
                    GoogleChartsDashboardComponent,
                    GoogleChartsControlComponent,
                ],
                providers: [
                    GoogleChartsLoaderService
                ],
                exports: [
                    GoogleChartComponent,
                    GoogleChartsDashboardComponent,
                    GoogleChartsControlComponent,
                ]
            }]
    }], null, null); })();
export { Ng2GoogleChartsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmcyLWdvb2dsZS1jaGFydHMubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZzItZ29vZ2xlLWNoYXJ0cy9zcmMvbGliL25nMi1nb29nbGUtY2hhcnRzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSw2REFBNkQsQ0FBQztBQUM3RyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSx5REFBeUQsQ0FBQzs7QUFpQnZHLElBQWEscUJBQXFCLEdBQWxDLE1BQWEscUJBQXFCO0FBQ2xDLENBQUMsQ0FBQTtBQURZLHFCQUFxQixvQkFmakMsUUFBUSxDQUFDLFVBQ04sWUFBWSxFQUFFO0NBQ1osb0JBQW9CLGNBQ3BCLDhCQUE4QixjQUM5Qiw0QkFBNEIsV0FDN0IsVUFDRCxTQUFTLEVBQUUsY0FDVDtXQUF5QixVQUMxQixVQUNEO0lBQU8sRUFBRTtVQUNQLG9CQUFvQixjQUNwQiw4QkFBOEIsY0FDOUIsNEJBQTRCLFdBQzdCLE1BQ0osQ0FBQyxJQUNXLHFCQUFxQixDQUNqQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFDRDtBQUFDLFNBRlkscUJBQXFCO0FBQ2pDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgR29vZ2xlQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuL2dvb2dsZS1jaGFydC9nb29nbGUtY2hhcnQuY29tcG9uZW50JztcbmltcG9ydCB7IEdvb2dsZUNoYXJ0c0xvYWRlclNlcnZpY2UgfSBmcm9tICcuL2dvb2dsZS1jaGFydHMtbG9hZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgR29vZ2xlQ2hhcnRzRGFzaGJvYXJkQ29tcG9uZW50IH0gZnJvbSAnLi9nb29nbGUtY2hhcnRzLWRhc2hib2FyZC9nb29nbGUtY2hhcnRzLWRhc2hib2FyZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgR29vZ2xlQ2hhcnRzQ29udHJvbENvbXBvbmVudCB9IGZyb20gJy4vZ29vZ2xlLWNoYXJ0cy1jb250cm9sL2dvb2dsZS1jaGFydHMtY29udHJvbC5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgR29vZ2xlQ2hhcnRDb21wb25lbnQsXG4gICAgICBHb29nbGVDaGFydHNEYXNoYm9hcmRDb21wb25lbnQsXG4gICAgICBHb29nbGVDaGFydHNDb250cm9sQ29tcG9uZW50LFxuICAgIF0sXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICBHb29nbGVDaGFydHNMb2FkZXJTZXJ2aWNlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICBHb29nbGVDaGFydENvbXBvbmVudCxcbiAgICAgIEdvb2dsZUNoYXJ0c0Rhc2hib2FyZENvbXBvbmVudCxcbiAgICAgIEdvb2dsZUNoYXJ0c0NvbnRyb2xDb21wb25lbnQsXG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBOZzJHb29nbGVDaGFydHNNb2R1bGUge1xufVxuIl19