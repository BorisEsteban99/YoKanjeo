import { __awaiter, __decorate, __metadata } from "tslib";
import { Component, Input, ElementRef } from '@angular/core';
import { GoogleChartsLoaderService } from '../google-charts-loader.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../google-charts-loader.service';
let GoogleChartsControlComponent = class GoogleChartsControlComponent {
    constructor(el, loaderService) {
        this.el = el;
        this.loaderService = loaderService;
        this.el = el;
        this.loaderService = loaderService;
    }
    ngOnInit() {
        this.data.component = this;
    }
    ensureInit() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.wrapper) {
                return;
            }
            yield this.loaderService.load({ packages: ['controls'] });
            let opt;
            opt = Object.create(this.data);
            opt.containerId = this.el.nativeElement.querySelector('div');
            this.wrapper = new google.visualization.ControlWrapper(opt);
        });
    }
};
GoogleChartsControlComponent.ɵfac = function GoogleChartsControlComponent_Factory(t) { return new (t || GoogleChartsControlComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.GoogleChartsLoaderService)); };
GoogleChartsControlComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GoogleChartsControlComponent, selectors: [["google-charts-control"]], inputs: { data: "data" }, decls: 1, vars: 0, template: function GoogleChartsControlComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "div");
    } }, encapsulation: 2 });
__decorate([
    Input(),
    __metadata("design:type", Object)
], GoogleChartsControlComponent.prototype, "data", void 0);
GoogleChartsControlComponent = __decorate([ __metadata("design:paramtypes", [ElementRef,
        GoogleChartsLoaderService])
], GoogleChartsControlComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GoogleChartsControlComponent, [{
        type: Component,
        args: [{
                selector: 'google-charts-control',
                template: '<div></div>'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.GoogleChartsLoaderService }]; }, { data: [{
            type: Input
        }] }); })();
export { GoogleChartsControlComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ29vZ2xlLWNoYXJ0cy1jb250cm9sLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmcyLWdvb2dsZS1jaGFydHMvc3JjL2xpYi9nb29nbGUtY2hhcnRzLWNvbnRyb2wvZ29vZ2xlLWNoYXJ0cy1jb250cm9sLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBU0EsT0FBTyxFQUNMLFNBQVMsRUFBVSxLQUFLLEVBQ3hCLFVBQVUsRUFDWCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQzs7O0FBUzVFLElBQWEsNEJBQTRCLEdBQXpDLE1BQWEsNEJBQTRCO0FBQUcsSUFNMUMsWUFBMkIsRUFBYyxFQUNkLGFBQXdDO0FBQ3JFLFFBRjZCLE9BQUUsR0FBRixFQUFFLENBQVk7QUFBQyxRQUNmLGtCQUFhLEdBQWIsYUFBYSxDQUEyQjtBQUFDLFFBQ2xFLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO0FBQ2pCLFFBQUksSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7QUFDdkMsSUFBRSxDQUFDO0FBQ0gsSUFDRSxRQUFRO0FBQ1YsUUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7QUFDL0IsSUFBRSxDQUFDO0FBQ0gsSUFDZSxVQUFVO0FBQ3pCO0FBR2tCLFlBSGQsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO0FBQ3RCLGdCQUFNLE9BQU87QUFDYixhQUFLO0FBQ0wsWUFBSSxNQUFNLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUMsUUFBUSxFQUFFLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQzdELFlBQUksSUFBSSxHQUF1QyxDQUFDO0FBQ2hELFlBQUksR0FBRyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ25DLFlBQUksR0FBRyxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDakUsWUFBSSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksTUFBTSxDQUFDLGFBQWEsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDaEUsUUFBRSxDQUFDO0FBRUgsS0FGRztBQUNILENBQUM7Ozs7NkJBQUE7QUF4QlU7QUFBYSxJQUFyQixLQUFLLEVBQUU7QUFBRTtBQUFzQywwREFBRztBQUZ4Qyw0QkFBNEIsb0JBSnhDLFNBQVMsQ0FBQyxVQUNULFFBQVEsRUFBRSxuQ0FHUixrQ0FNNkIsVUFBVTtZQVRSLFVBQ2pDLFFBQVEsRUFBRSxoQ0FTWixRQUE0Qyx5QkFBeUI7U0FUNUMsTUFDeEIsQ0FBQyxoQkFRc0UsR0FQM0QsNEJBQTRCLENBMEJ4Qzs7Ozs7Ozs7O29CQUNEO0FBQUMsU0EzQlksNEJBQTRCO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJkZWNsYXJlIHZhciBnb29nbGU6IGFueTtcblxuZXhwb3J0IGludGVyZmFjZSBHb29nbGVDaGFydHNDb250cm9sSW50ZXJmYWNlIHtcbiAgY29udHJvbFR5cGU6IHN0cmluZztcbiAgb3B0aW9ucz86IG9iamVjdDtcbiAgc3RhdGU/OiBvYmplY3Q7XG4gIGNvbXBvbmVudD86IEdvb2dsZUNoYXJ0c0NvbnRyb2xDb21wb25lbnQ7XG59XG5cbmltcG9ydCB7XG4gIENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCxcbiAgRWxlbWVudFJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgR29vZ2xlQ2hhcnRzTG9hZGVyU2VydmljZSB9IGZyb20gJy4uL2dvb2dsZS1jaGFydHMtbG9hZGVyLnNlcnZpY2UnO1xuXG5pbnRlcmZhY2UgSW50ZXJuYWxHb29nbGVDaGFydHNDb250cm9sT3B0aW9ucyBleHRlbmRzIEdvb2dsZUNoYXJ0c0NvbnRyb2xJbnRlcmZhY2Uge1xuICBjb250YWluZXJJZDogc3RyaW5nO1xufVxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZ29vZ2xlLWNoYXJ0cy1jb250cm9sJyxcbiAgdGVtcGxhdGU6ICc8ZGl2PjwvZGl2PicsXG59KVxuZXhwb3J0IGNsYXNzIEdvb2dsZUNoYXJ0c0NvbnRyb2xDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgpIHB1YmxpYyBkYXRhOiBHb29nbGVDaGFydHNDb250cm9sSW50ZXJmYWNlO1xuXG4gIHB1YmxpYyB3cmFwcGVyOiBhbnk7XG5cbiAgcHVibGljIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYsXG4gICAgICAgICAgICAgICAgICAgICBwcml2YXRlIGxvYWRlclNlcnZpY2U6IEdvb2dsZUNoYXJ0c0xvYWRlclNlcnZpY2UpIHtcbiAgICB0aGlzLmVsID0gZWw7XG4gICAgdGhpcy5sb2FkZXJTZXJ2aWNlID0gbG9hZGVyU2VydmljZTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuZGF0YS5jb21wb25lbnQgPSB0aGlzO1xuICB9XG5cbiAgcHVibGljIGFzeW5jIGVuc3VyZUluaXQoKSB7XG4gICAgaWYgKHRoaXMud3JhcHBlcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBhd2FpdCB0aGlzLmxvYWRlclNlcnZpY2UubG9hZCh7cGFja2FnZXM6IFsnY29udHJvbHMnXSB9KTtcbiAgICBsZXQgb3B0OiBJbnRlcm5hbEdvb2dsZUNoYXJ0c0NvbnRyb2xPcHRpb25zO1xuICAgIG9wdCA9IE9iamVjdC5jcmVhdGUodGhpcy5kYXRhKTtcbiAgICBvcHQuY29udGFpbmVySWQgPSB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcignZGl2Jyk7XG4gICAgdGhpcy53cmFwcGVyID0gbmV3IGdvb2dsZS52aXN1YWxpemF0aW9uLkNvbnRyb2xXcmFwcGVyKG9wdCk7XG4gIH1cbn1cbiJdfQ==