import { __decorate, __read, __spread } from "tslib";
import { ErrorHandler, Injectable, isDevMode } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var OwlLogger = /** @class */ (function () {
    function OwlLogger(errorHandler) {
        this.errorHandler = errorHandler;
    }
    OwlLogger.prototype.log = function (value) {
        var rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            rest[_i - 1] = arguments[_i];
        }
        if (isDevMode()) {
            console.log.apply(console, __spread([value], rest));
        }
    };
    OwlLogger.prototype.error = function (error) {
        this.errorHandler.handleError(error);
    };
    OwlLogger.prototype.warn = function (value) {
        var rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            rest[_i - 1] = arguments[_i];
        }
        console.warn.apply(console, __spread([value], rest));
    };
    OwlLogger.ctorParameters = function () { return [
        { type: ErrorHandler }
    ]; };
OwlLogger.ɵfac = function OwlLogger_Factory(t) { return new (t || OwlLogger)(ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler)); };
OwlLogger.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: OwlLogger, factory: function (t) { return OwlLogger.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OwlLogger, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc0.ErrorHandler }]; }, null); })();
    return OwlLogger;
}());
export { OwlLogger };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIm5neC1vd2wtY2Fyb3VzZWwtby9saWIvc2VydmljZXMvbG9nZ2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFHcEU7QUFFa0IsSUFBaEIsbUJBQW9CLFlBQTBCO0FBQUssUUFBL0IsaUJBQVksR0FBWixZQUFZLENBQWM7QUFBRSxJQUFDLENBQUM7QUFDcEQsSUFDRSx1QkFBRyxHQUFILFVBQUksS0FBVTtBQUFLLFFBQUgsY0FBYztBQUFFLGFBQWhCLFVBQWMsRUFBZCxxQkFBYyxFQUFkLElBQWM7QUFDaEMsWUFEa0IsNkJBQWM7QUFBRTtBQUMxQixRQUFKLElBQUksU0FBUyxFQUFFLEVBQUU7QUFDckIsWUFBTSxPQUFPLENBQUMsR0FBRyxPQUFYLE9BQU8sWUFBSyxLQUFLLEdBQUssSUFBSSxHQUFFO0FBQ2xDLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDRixJQUNDLHlCQUFLLEdBQUwsVUFBTSxLQUFZO0FBQ3BCLFFBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDekMsSUFBRSxDQUFDO0FBQ0YsSUFDQyx3QkFBSSxHQUFKLFVBQUssS0FBVTtBQUFLLFFBQUgsY0FBYztBQUFFLGFBQWhCLFVBQWMsRUFBZCxxQkFBYyxFQUFkLElBQWM7QUFDakMsWUFEbUIsNkJBQWM7QUFBRTtBQUMzQixRQUFKLE9BQU8sQ0FBQyxJQUFJLE9BQVosT0FBTyxZQUFNLEtBQUssR0FBSyxJQUFJLEdBQUU7QUFDakMsSUFBRSxDQUFDO0FBQ0Y7QUFDb0QsZ0JBaEJqQixZQUFZO0FBQUk7S0FGdkMsU0FBUyx5QkFEckIsVUFBVSxFQUFFLFNBQ0EsU0FBUyxDQWlCckI7Ozs7NkVBQUM7QUFDRCxJQURELGdCQUFDO0FBQ0EsQ0FEQSxBQWpCRCxJQWlCQzs7QUFwQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBZEEsQUFBQSxBQUZBLEFBQUEsQUFEQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBaUJBLEFBQUEsQUFBQSxBQUFBLEFBakJBLEFBaUJBLEFBakJBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFcnJvckhhbmRsZXIsIEluamVjdGFibGUsIGlzRGV2TW9kZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgT3dsTG9nZ2VyIHtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlcnJvckhhbmRsZXI6IEVycm9ySGFuZGxlcikge31cclxuXHJcbiAgbG9nKHZhbHVlOiBhbnksIC4uLnJlc3Q6IGFueVtdKSB7XHJcbiAgICBpZiAoaXNEZXZNb2RlKCkpIHtcclxuICAgICAgY29uc29sZS5sb2codmFsdWUsIC4uLnJlc3QpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZXJyb3IoZXJyb3I6IEVycm9yKSB7XHJcbiAgICB0aGlzLmVycm9ySGFuZGxlci5oYW5kbGVFcnJvcihlcnJvcik7XHJcbiAgfVxyXG5cclxuICB3YXJuKHZhbHVlOiBhbnksIC4uLnJlc3Q6IGFueVtdKSB7XHJcbiAgICBjb25zb2xlLndhcm4odmFsdWUsIC4uLnJlc3QpO1xyXG4gIH1cclxufVxyXG4iXX0=