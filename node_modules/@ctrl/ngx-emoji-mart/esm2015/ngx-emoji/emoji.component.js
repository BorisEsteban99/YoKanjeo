import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { DEFAULT_BACKGROUNDFN, EmojiService } from './emoji.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './emoji.service';
import * as ɵngcc2 from '@angular/common';

function EmojiComponent_button_0_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.unified);
} }
function EmojiComponent_button_0_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 2);
    ɵngcc0.ɵɵlistener("click", function EmojiComponent_button_0_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.handleClick($event); })("mouseenter", function EmojiComponent_button_0_Template_button_mouseenter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.handleOver($event); })("mouseleave", function EmojiComponent_button_0_Template_button_mouseleave_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.handleLeave($event); });
    ɵngcc0.ɵɵelementStart(1, "span", 3);
    ɵngcc0.ɵɵtemplate(2, EmojiComponent_button_0_ng_template_2_Template, 1, 1, "ng-template", 4);
    ɵngcc0.ɵɵprojection(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("emoji-mart-emoji-native", ctx_r0.isNative)("emoji-mart-emoji-custom", ctx_r0.custom);
    ɵngcc0.ɵɵproperty("title", ctx_r0.title);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r0.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngStyle", ctx_r0.style);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isNative);
} }
function EmojiComponent_span_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r7.unified);
} }
function EmojiComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 5);
    ɵngcc0.ɵɵlistener("click", function EmojiComponent_span_1_Template_span_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.handleClick($event); })("mouseenter", function EmojiComponent_span_1_Template_span_mouseenter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.handleOver($event); })("mouseleave", function EmojiComponent_span_1_Template_span_mouseleave_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.handleLeave($event); });
    ɵngcc0.ɵɵelementStart(1, "span", 3);
    ɵngcc0.ɵɵtemplate(2, EmojiComponent_span_1_ng_template_2_Template, 1, 1, "ng-template", 4);
    ɵngcc0.ɵɵprojection(3, 1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("emoji-mart-emoji-native", ctx_r1.isNative)("emoji-mart-emoji-custom", ctx_r1.custom);
    ɵngcc0.ɵɵproperty("title", ctx_r1.title);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r1.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngStyle", ctx_r1.style);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.isNative);
} }
const _c0 = ["*", "*"];
let EmojiComponent = class EmojiComponent {
    constructor(emojiService) {
        this.emojiService = emojiService;
        this.skin = 1;
        this.set = 'apple';
        this.sheetSize = 64;
        /** Renders the native unicode emoji */
        this.isNative = false;
        this.forceSize = false;
        this.tooltip = false;
        this.size = 24;
        this.emoji = '';
        this.hideObsolete = false;
        this.SHEET_COLUMNS = 57;
        this.emojiOver = new EventEmitter();
        this.emojiLeave = new EventEmitter();
        this.emojiClick = new EventEmitter();
        this.title = '';
        this.label = '';
        this.custom = false;
        this.isVisible = true;
        // TODO: replace 4.0.3 w/ dynamic get verison from emoji-datasource in package.json
        this.backgroundImageFn = DEFAULT_BACKGROUNDFN;
    }
    ngOnChanges() {
        if (!this.emoji) {
            return (this.isVisible = false);
        }
        const data = this.getData();
        if (!data) {
            return (this.isVisible = false);
        }
        // const children = this.children;
        this.unified = data.native || null;
        if (data.custom) {
            this.custom = data.custom;
        }
        if (!data.unified && !data.custom) {
            return (this.isVisible = false);
        }
        if (this.tooltip) {
            this.title = data.shortNames[0];
        }
        if (data.obsoletedBy && this.hideObsolete) {
            return (this.isVisible = false);
        }
        this.label = [data.native]
            .concat(data.shortNames)
            .filter(Boolean)
            .join(', ');
        if (this.isNative && data.unified && data.native) {
            // hide older emoji before the split into gendered emoji
            this.style = { fontSize: `${this.size}px` };
            if (this.forceSize) {
                this.style.display = 'inline-block';
                this.style.width = `${this.size}px`;
                this.style.height = `${this.size}px`;
                this.style['word-break'] = 'keep-all';
            }
        }
        else if (data.custom) {
            this.style = {
                width: `${this.size}px`,
                height: `${this.size}px`,
                display: 'inline-block'
            };
            if (data.spriteUrl && this.sheetRows && this.sheetColumns) {
                this.style = Object.assign(Object.assign({}, this.style), { backgroundImage: `url(${data.spriteUrl})`, backgroundSize: `${100 * this.sheetColumns}% ${100 * this.sheetRows}%`, backgroundPosition: this.emojiService.getSpritePosition(data.sheet, this.sheetColumns) });
            }
            else {
                this.style = Object.assign(Object.assign({}, this.style), { backgroundImage: `url(${data.imageUrl})`, backgroundSize: 'contain' });
            }
        }
        else {
            if (data.hidden.length && data.hidden.includes(this.set)) {
                if (this.fallback) {
                    this.style = { fontSize: `${this.size}px` };
                    this.unified = this.fallback(data, this);
                }
                else {
                    return (this.isVisible = false);
                }
            }
            else {
                this.style = this.emojiService.emojiSpriteStyles(data.sheet, this.set, this.size, this.sheetSize, this.sheetRows, this.backgroundImageFn, this.SHEET_COLUMNS);
            }
        }
        return (this.isVisible = true);
    }
    getData() {
        return this.emojiService.getData(this.emoji, this.skin, this.set);
    }
    getSanitizedData() {
        return this.emojiService.getSanitizedData(this.emoji, this.skin, this.set);
    }
    handleClick($event) {
        const emoji = this.getSanitizedData();
        this.emojiClick.emit({ emoji, $event });
    }
    handleOver($event) {
        const emoji = this.getSanitizedData();
        this.emojiOver.emit({ emoji, $event });
    }
    handleLeave($event) {
        const emoji = this.getSanitizedData();
        this.emojiLeave.emit({ emoji, $event });
    }
};
EmojiComponent.ɵfac = function EmojiComponent_Factory(t) { return new (t || EmojiComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.EmojiService)); };
EmojiComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: EmojiComponent, selectors: [["ngx-emoji"]], inputs: { skin: "skin", set: "set", sheetSize: "sheetSize", isNative: "isNative", forceSize: "forceSize", tooltip: "tooltip", size: "size", emoji: "emoji", hideObsolete: "hideObsolete", SHEET_COLUMNS: "SHEET_COLUMNS", backgroundImageFn: "backgroundImageFn", fallback: "fallback", sheetRows: "sheetRows", sheetColumns: "sheetColumns", useButton: "useButton" }, outputs: { emojiOver: "emojiOver", emojiLeave: "emojiLeave", emojiClick: "emojiClick" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 2, vars: 2, consts: [["type", "button", "class", "emoji-mart-emoji", 3, "title", "emoji-mart-emoji-native", "emoji-mart-emoji-custom", "click", "mouseenter", "mouseleave", 4, "ngIf"], ["class", "emoji-mart-emoji", 3, "title", "emoji-mart-emoji-native", "emoji-mart-emoji-custom", "click", "mouseenter", "mouseleave", 4, "ngIf"], ["type", "button", 1, "emoji-mart-emoji", 3, "title", "click", "mouseenter", "mouseleave"], [3, "ngStyle"], [3, "ngIf"], [1, "emoji-mart-emoji", 3, "title", "click", "mouseenter", "mouseleave"]], template: function EmojiComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵtemplate(0, EmojiComponent_button_0_Template, 4, 8, "button", 0);
        ɵngcc0.ɵɵtemplate(1, EmojiComponent_span_1_Template, 4, 8, "span", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.useButton && ctx.isVisible);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.useButton && ctx.isVisible);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgStyle], encapsulation: 2, changeDetection: 0 });
EmojiComponent.ctorParameters = () => [
    { type: EmojiService }
];
__decorate([
    Input()
], EmojiComponent.prototype, "skin", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "set", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "sheetSize", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "isNative", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "forceSize", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "tooltip", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "size", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "emoji", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "fallback", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "hideObsolete", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "SHEET_COLUMNS", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "sheetRows", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "sheetColumns", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "useButton", void 0);
__decorate([
    Output()
], EmojiComponent.prototype, "emojiOver", void 0);
__decorate([
    Output()
], EmojiComponent.prototype, "emojiLeave", void 0);
__decorate([
    Output()
], EmojiComponent.prototype, "emojiClick", void 0);
__decorate([
    Input()
], EmojiComponent.prototype, "backgroundImageFn", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmojiComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-emoji',
                template: `
    <button
      *ngIf="useButton && isVisible"
      type="button"
      (click)="handleClick($event)"
      (mouseenter)="handleOver($event)"
      (mouseleave)="handleLeave($event)"
      [title]="title"
      [attr.aria-label]="label"
      class="emoji-mart-emoji"
      [class.emoji-mart-emoji-native]="isNative"
      [class.emoji-mart-emoji-custom]="custom"
    >
      <span [ngStyle]="style">
        <ng-template [ngIf]="isNative">{{ unified }}</ng-template>
        <ng-content></ng-content>
      </span>
    </button>

    <span
      *ngIf="!useButton && isVisible"
      (click)="handleClick($event)"
      (mouseenter)="handleOver($event)"
      (mouseleave)="handleLeave($event)"
      [title]="title"
      [attr.aria-label]="label"
      class="emoji-mart-emoji"
      [class.emoji-mart-emoji-native]="isNative"
      [class.emoji-mart-emoji-custom]="custom"
    >
      <span [ngStyle]="style">
        <ng-template [ngIf]="isNative">{{ unified }}</ng-template>
        <ng-content></ng-content>
      </span>
    </span>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false
            }]
    }], function () { return [{ type: ɵngcc1.EmojiService }]; }, { skin: [{
            type: Input
        }], set: [{
            type: Input
        }], sheetSize: [{
            type: Input
        }], isNative: [{
            type: Input
        }], forceSize: [{
            type: Input
        }], tooltip: [{
            type: Input
        }], size: [{
            type: Input
        }], emoji: [{
            type: Input
        }], hideObsolete: [{
            type: Input
        }], SHEET_COLUMNS: [{
            type: Input
        }], emojiOver: [{
            type: Output
        }], emojiLeave: [{
            type: Output
        }], emojiClick: [{
            type: Output
        }], backgroundImageFn: [{
            type: Input
        }], fallback: [{
            type: Input
        }], sheetRows: [{
            type: Input
        }], sheetColumns: [{
            type: Input
        }], useButton: [{
            type: Input
        }] }); })();
export { EmojiComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,