import { __decorate } from "tslib";
import { Component, EventEmitter, Input, Output, ViewChild, } from '@angular/core';
import { EmojiSearch } from './emoji-search.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './emoji-search.service';
import * as ɵngcc2 from '@angular/forms';

const _c0 = ["inputRef"];
let id = 0;
let SearchComponent = class SearchComponent {
    constructor(emojiSearch) {
        this.emojiSearch = emojiSearch;
        this.maxResults = 75;
        this.autoFocus = false;
        this.include = [];
        this.exclude = [];
        this.custom = [];
        this.searchResults = new EventEmitter();
        this.enterKey = new EventEmitter();
        this.isSearching = false;
        this.query = '';
        this.inputId = `emoji-mart-search-${++id}`;
    }
    ngOnInit() {
        this.icon = this.icons.search;
    }
    ngAfterViewInit() {
        if (this.autoFocus) {
            this.inputRef.nativeElement.focus();
        }
    }
    clear() {
        this.query = '';
        this.handleSearch('');
        this.inputRef.nativeElement.focus();
    }
    handleEnterKey($event) {
        if (!this.query) {
            return;
        }
        this.enterKey.emit($event);
        $event.preventDefault();
    }
    handleSearch(value) {
        if (value === '') {
            this.icon = this.icons.search;
            this.isSearching = false;
        }
        else {
            this.icon = this.icons.delete;
            this.isSearching = true;
        }
        const emojis = this.emojiSearch.search(this.query, this.emojisToShowFilter, this.maxResults, this.include, this.exclude, this.custom);
        this.searchResults.emit(emojis);
    }
    handleChange() {
        this.handleSearch(this.query);
    }
};
SearchComponent.ɵfac = function SearchComponent_Factory(t) { return new (t || SearchComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.EmojiSearch)); };
SearchComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SearchComponent, selectors: [["emoji-search"]], viewQuery: function SearchComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputRef = _t.first);
    } }, inputs: { maxResults: "maxResults", autoFocus: "autoFocus", include: "include", exclude: "exclude", custom: "custom", i18n: "i18n", icons: "icons", emojisToShowFilter: "emojisToShowFilter" }, outputs: { searchResults: "searchResults", enterKey: "enterKey" }, decls: 8, vars: 9, consts: [[1, "emoji-mart-search"], ["type", "search", 3, "id", "placeholder", "autofocus", "ngModel", "keyup.enter", "ngModelChange"], ["inputRef", ""], [1, "emoji-mart-sr-only", 3, "htmlFor"], ["type", "button", 1, "emoji-mart-search-icon", 3, "disabled", "click", "keyup.enter"], ["xmlns", "http://www.w3.org/2000/svg", "viewBox", "0 0 20 20", "width", "13", "height", "13", "opacity", "0.5"]], template: function SearchComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "input", 1, 2);
        ɵngcc0.ɵɵlistener("keyup.enter", function SearchComponent_Template_input_keyup_enter_1_listener($event) { return ctx.handleEnterKey($event); })("ngModelChange", function SearchComponent_Template_input_ngModelChange_1_listener($event) { return ctx.query = $event; })("ngModelChange", function SearchComponent_Template_input_ngModelChange_1_listener() { return ctx.handleChange(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "label", 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "button", 4);
        ɵngcc0.ɵɵlistener("click", function SearchComponent_Template_button_click_5_listener() { return ctx.clear(); })("keyup.enter", function SearchComponent_Template_button_keyup_enter_5_listener() { return ctx.clear(); });
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelementStart(6, "svg", 5);
        ɵngcc0.ɵɵelement(7, "path");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("id", ctx.inputId)("placeholder", ctx.i18n.search)("autofocus", ctx.autoFocus)("ngModel", ctx.query);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("htmlFor", ctx.inputId);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.i18n.search, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("disabled", !ctx.isSearching);
        ɵngcc0.ɵɵattribute("aria-label", ctx.i18n.clear);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵattribute("d", ctx.icon);
    } }, directives: [ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel], encapsulation: 2 });
SearchComponent.ctorParameters = () => [
    { type: EmojiSearch }
];
__decorate([
    Input()
], SearchComponent.prototype, "maxResults", void 0);
__decorate([
    Input()
], SearchComponent.prototype, "autoFocus", void 0);
__decorate([
    Input()
], SearchComponent.prototype, "i18n", void 0);
__decorate([
    Input()
], SearchComponent.prototype, "include", void 0);
__decorate([
    Input()
], SearchComponent.prototype, "exclude", void 0);
__decorate([
    Input()
], SearchComponent.prototype, "custom", void 0);
__decorate([
    Input()
], SearchComponent.prototype, "icons", void 0);
__decorate([
    Input()
], SearchComponent.prototype, "emojisToShowFilter", void 0);
__decorate([
    Output()
], SearchComponent.prototype, "searchResults", void 0);
__decorate([
    Output()
], SearchComponent.prototype, "enterKey", void 0);
__decorate([
    ViewChild('inputRef', { static: true })
], SearchComponent.prototype, "inputRef", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SearchComponent, [{
        type: Component,
        args: [{
                selector: 'emoji-search',
                template: `
    <div class="emoji-mart-search">
      <input
        [id]="inputId"
        #inputRef
        type="search"
        (keyup.enter)="handleEnterKey($event)"
        [placeholder]="i18n.search"
        [autofocus]="autoFocus"
        [(ngModel)]="query"
        (ngModelChange)="handleChange()"
      />
      <!--
      Use a <label> in addition to the placeholder for accessibility, but place it off-screen
      http://www.maxability.co.in/2016/01/placeholder-attribute-and-why-it-is-not-accessible/
      -->
      <label class="emoji-mart-sr-only" [htmlFor]="inputId">
        {{ i18n.search }}
      </label>
      <button
        type="button"
        class="emoji-mart-search-icon"
        (click)="clear()"
        (keyup.enter)="clear()"
        [disabled]="!isSearching"
        [attr.aria-label]="i18n.clear"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 20 20"
          width="13"
          height="13"
          opacity="0.5"
        >
          <path [attr.d]="icon" />
        </svg>
      </button>
    </div>
  `,
                preserveWhitespaces: false
            }]
    }], function () { return [{ type: ɵngcc1.EmojiSearch }]; }, { maxResults: [{
            type: Input
        }], autoFocus: [{
            type: Input
        }], include: [{
            type: Input
        }], exclude: [{
            type: Input
        }], custom: [{
            type: Input
        }], searchResults: [{
            type: Output
        }], enterKey: [{
            type: Output
        }], i18n: [{
            type: Input
        }], icons: [{
            type: Input
        }], emojisToShowFilter: [{
            type: Input
        }], inputRef: [{
            type: ViewChild,
            args: ['inputRef', { static: true }]
        }] }); })();
export { SearchComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiQGN0cmwvbmd4LWVtb2ppLW1hcnQvc2VhcmNoLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUVMLFNBQVMsRUFFVCxZQUFZLEVBQ1osS0FBSyxFQUVMLE1BQU0sRUFDTixTQUFTLEdBQ1YsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHdCQUF3QixDQUFDOzs7Ozs7QUFFckQsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBNkNYLElBQWEsZUFBZSxHQUE1QixNQUFhLGVBQWU7QUFBRyxJQWlCN0IsWUFBb0IsV0FBd0I7QUFBSSxRQUE1QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtBQUFDLFFBaEJwQyxlQUFVLEdBQUcsRUFBRSxDQUFDO0FBQzNCLFFBQVcsY0FBUyxHQUFHLEtBQUssQ0FBQztBQUM3QixRQUNXLFlBQU8sR0FBYSxFQUFFLENBQUM7QUFDbEMsUUFBVyxZQUFPLEdBQWEsRUFBRSxDQUFDO0FBQ2xDLFFBQVcsV0FBTSxHQUFVLEVBQUUsQ0FBQztBQUM5QixRQUVZLGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQVMsQ0FBQztBQUN0RCxRQUFZLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0FBQy9DLFFBQ0UsZ0JBQVcsR0FBRyxLQUFLLENBQUM7QUFDdEIsUUFDRSxVQUFLLEdBQUcsRUFBRSxDQUFDO0FBQ2IsUUFBRSxZQUFPLEdBQUcscUJBQXFCLEVBQUUsRUFBRSxFQUFFLENBQUM7QUFDeEMsSUFDaUQsQ0FBQztBQUNsRCxJQUNFLFFBQVE7QUFDVixRQUFJLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7QUFDbEMsSUFBRSxDQUFDO0FBQ0gsSUFBRSxlQUFlO0FBQ2pCLFFBQUksSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO0FBQ3hCLFlBQU0sSUFBSSxDQUFDLFFB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QUFDLFNBN0RZLGVBQWU7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyVmlld0luaXQsXG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZixcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgT25Jbml0LFxuICBPdXRwdXQsXG4gIFZpZXdDaGlsZCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEVtb2ppU2VhcmNoIH0gZnJvbSAnLi9lbW9qaS1zZWFyY2guc2VydmljZSc7XG5cbmxldCBpZCA9IDA7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Vtb2ppLXNlYXJjaCcsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImVtb2ppLW1hcnQtc2VhcmNoXCI+XG4gICAgICA8aW5wdXRcbiAgICAgICAgW2lkXT1cImlucHV0SWRcIlxuICAgICAgICAjaW5wdXRSZWZcbiAgICAgICAgdHlwZT1cInNlYXJjaFwiXG4gICAgICAgIChrZXl1cC5lbnRlcik9XCJoYW5kbGVFbnRlcktleSgkZXZlbnQpXCJcbiAgICAgICAgW3BsYWNlaG9sZGVyXT1cImkxOG4uc2VhcmNoXCJcbiAgICAgICAgW2F1dG9mb2N1c109XCJhdXRvRm9jdXNcIlxuICAgICAgICBbKG5nTW9kZWwpXT1cInF1ZXJ5XCJcbiAgICAgICAgKG5nTW9kZWxDaGFuZ2UpPVwiaGFuZGxlQ2hhbmdlKClcIlxuICAgICAgLz5cbiAgICAgIDwhLS1cbiAgICAgIFVzZSBhIDxsYWJlbD4gaW4gYWRkaXRpb24gdG8gdGhlIHBsYWNlaG9sZGVyIGZvciBhY2Nlc3NpYmlsaXR5LCBidXQgcGxhY2UgaXQgb2ZmLXNjcmVlblxuICAgICAgaHR0cDovL3d3dy5tYXhhYmlsaXR5LmNvLmluLzIwMTYvMDEvcGxhY2Vob2xkZXItYXR0cmlidXRlLWFuZC13aHktaXQtaXMtbm90LWFjY2Vzc2libGUvXG4gICAgICAtLT5cbiAgICAgIDxsYWJlbCBjbGFzcz1cImVtb2ppLW1hcnQtc3Itb25seVwiIFtodG1sRm9yXT1cImlucHV0SWRcIj5cbiAgICAgICAge3sgaTE4bi5zZWFyY2ggfX1cbiAgICAgIDwvbGFiZWw+XG4gICAgICA8YnV0dG9uXG4gICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICBjbGFzcz1cImVtb2ppLW1hcnQtc2VhcmNoLWljb25cIlxuICAgICAgICAoY2xpY2spPVwiY2xlYXIoKVwiXG4gICAgICAgIChrZXl1cC5lbnRlcik9XCJjbGVhcigpXCJcbiAgICAgICAgW2Rpc2FibGVkXT1cIiFpc1NlYXJjaGluZ1wiXG4gICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwiaTE4bi5jbGVhclwiXG4gICAgICA+XG4gICAgICAgIDxzdmdcbiAgICAgICAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICAgICAgICB2aWV3Qm94PVwiMCAwIDIwIDIwXCJcbiAgICAgICAgICB3aWR0aD1cIjEzXCJcbiAgICAgICAgICBoZWlnaHQ9XCIxM1wiXG4gICAgICAgICAgb3BhY2l0eT1cIjAuNVwiXG4gICAgICAgID5cbiAgICAgICAgICA8cGF0aCBbYXR0ci5kXT1cImljb25cIiAvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICBgLFxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcbn0pXG5leHBvcnQgY2xhc3MgU2VhcmNoQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25Jbml0IHtcbiAgQElucHV0KCkgbWF4UmVzdWx0cyA9IDc1O1xuICBASW5wdXQoKSBhdXRvRm9jdXMgPSBmYWxzZTtcbiAgQElucHV0KCkgaTE4bjogYW55O1xuICBASW5wdXQoKSBpbmNsdWRlOiBzdHJpbmdbXSA9IFtdO1xuICBASW5wdXQoKSBleGNsdWRlOiBzdHJpbmdbXSA9IFtdO1xuICBASW5wdXQoKSBjdXN0b206IGFueVtdID0gW107XG4gIEBJbnB1dCgpIGljb25zPzogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfTtcbiAgQElucHV0KCkgZW1vamlzVG9TaG93RmlsdGVyPzogKHg6IGFueSkgPT4gYm9vbGVhbjtcbiAgQE91dHB1dCgpIHNlYXJjaFJlc3VsdHMgPSBuZXcgRXZlbnRFbWl0dGVyPGFueVtdPigpO1xuICBAT3V0cHV0KCkgZW50ZXJLZXkgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgQFZpZXdDaGlsZCgnaW5wdXRSZWYnLCB7IHN0YXRpYzogdHJ1ZSB9KSBwcml2YXRlIGlucHV0UmVmITogRWxlbWVudFJlZjtcbiAgaXNTZWFyY2hpbmcgPSBmYWxzZTtcbiAgaWNvbj86IHN0cmluZztcbiAgcXVlcnkgPSAnJztcbiAgaW5wdXRJZCA9IGBlbW9qaS1tYXJ0LXNlYXJjaC0keysraWR9YDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVtb2ppU2VhcmNoOiBFbW9qaVNlYXJjaCkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmljb24gPSB0aGlzLmljb25zLnNlYXJjaDtcbiAgfVxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgaWYgKHRoaXMuYXV0b0ZvY3VzKSB7XG4gICAgICB0aGlzLmlucHV0UmVmLm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICB9XG4gIH1cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5xdWVyeSA9ICcnO1xuICAgIHRoaXMuaGFuZGxlU2VhcmNoKCcnKTtcbiAgICB0aGlzLmlucHV0UmVmLm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgfVxuICBoYW5kbGVFbnRlcktleSgkZXZlbnQ6IEV2ZW50KSB7XG4gICAgaWYgKCF0aGlzLnF1ZXJ5KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZW50ZXJLZXkuZW1pdCgkZXZlbnQpO1xuICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICB9XG4gIGhhbmRsZVNlYXJjaCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgaWYgKHZhbHVlID09PSAnJykge1xuICAgICAgdGhpcy5pY29uID0gdGhpcy5pY29ucy5zZWFyY2g7XG4gICAgICB0aGlzLmlzU2VhcmNoaW5nID0gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaWNvbiA9IHRoaXMuaWNvbnMuZGVsZXRlO1xuICAgICAgdGhpcy5pc1NlYXJjaGluZyA9IHRydWU7XG4gICAgfVxuICAgIGNvbnN0IGVtb2ppcyA9IHRoaXMuZW1vamlTZWFyY2guc2VhcmNoKFxuICAgICAgdGhpcy5xdWVyeSxcbiAgICAgIHRoaXMuZW1vamlzVG9TaG93RmlsdGVyLFxuICAgICAgdGhpcy5tYXhSZXN1bHRzLFxuICAgICAgdGhpcy5pbmNsdWRlLFxuICAgICAgdGhpcy5leGNsdWRlLFxuICAgICAgdGhpcy5jdXN0b20sXG4gICAgKTtcbiAgICB0aGlzLnNlYXJjaFJlc3VsdHMuZW1pdChlbW9qaXMpO1xuICB9XG4gIGhhbmRsZUNoYW5nZSgpIHtcbiAgICB0aGlzLmhhbmRsZVNlYXJjaCh0aGlzLnF1ZXJ5KTtcbiAgfVxufVxuIl19