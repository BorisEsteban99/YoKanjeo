import { __decorate } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild, } from '@angular/core';
import { Emoji, EmojiService } from '@ctrl/ngx-emoji-mart/ngx-emoji';
import { EmojiFrequentlyService } from './emoji-frequently.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ctrl/ngx-emoji-mart/ngx-emoji';
import * as ɵngcc2 from './emoji-frequently.service';
import * as ɵngcc3 from '@angular/common';

const _c0 = ["container"];
const _c1 = ["label"];
function CategoryComponent_ng_template_6_ngx_emoji_0_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "ngx-emoji", 8);
    ɵngcc0.ɵɵlistener("emojiOver", function CategoryComponent_ng_template_6_ngx_emoji_0_Template_ngx_emoji_emojiOver_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.emojiOver.emit($event); })("emojiLeave", function CategoryComponent_ng_template_6_ngx_emoji_0_Template_ngx_emoji_emojiLeave_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.emojiLeave.emit($event); })("emojiClick", function CategoryComponent_ng_template_6_ngx_emoji_0_Template_ngx_emoji_emojiClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r9 = ɵngcc0.ɵɵnextContext(2); return ctx_r9.emojiClick.emit($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const emoji_r5 = ctx.$implicit;
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("emoji", emoji_r5)("size", ctx_r4.emojiSize)("skin", ctx_r4.emojiSkin)("isNative", ctx_r4.emojiIsNative)("set", ctx_r4.emojiSet)("sheetSize", ctx_r4.emojiSheetSize)("forceSize", ctx_r4.emojiForceSize)("tooltip", ctx_r4.emojiTooltip)("backgroundImageFn", ctx_r4.emojiBackgroundImageFn)("hideObsolete", ctx_r4.hideObsolete);
} }
function CategoryComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, CategoryComponent_ng_template_6_ngx_emoji_0_Template, 1, 10, "ngx-emoji", 7);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.emojis)("ngForTrackBy", ctx_r2.trackById);
} }
function CategoryComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵelement(2, "ngx-emoji", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 10);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("emoji", ctx_r3.notFoundEmoji)("skin", ctx_r3.emojiSkin)("isNative", ctx_r3.emojiIsNative)("set", ctx_r3.emojiSet)("sheetSize", ctx_r3.emojiSheetSize)("forceSize", ctx_r3.emojiForceSize)("tooltip", ctx_r3.emojiTooltip)("backgroundImageFn", ctx_r3.emojiBackgroundImageFn)("useButton", ctx_r3.emojiUseButton);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.i18n.notfound, " ");
} }
let CategoryComponent = class CategoryComponent {
    constructor(ref, emojiService, frequently) {
        this.ref = ref;
        this.emojiService = emojiService;
        this.frequently = frequently;
        this.hasStickyPosition = true;
        this.name = '';
        this.perLine = 9;
        this.totalFrequentLines = 4;
        this.recent = [];
        this.custom = [];
        this.hideObsolete = true;
        this.emojiOver = new EventEmitter();
        this.emojiLeave = new EventEmitter();
        this.emojiClick = new EventEmitter();
        this.containerStyles = {};
        this.labelStyles = {};
        this.labelSpanStyles = {};
        this.margin = 0;
        this.minMargin = 0;
        this.maxMargin = 0;
        this.top = 0;
    }
    ngOnInit() {
        this.emojis = this.getEmojis();
        if (!this.emojis) {
            this.containerStyles = { display: 'none' };
        }
        if (!this.hasStickyPosition) {
            this.labelStyles = { height: 28 };
            // this.labelSpanStyles = { position: 'absolute' };
        }
    }
    memoizeSize() {
        const parent = this.container.nativeElement.parentNode.parentNode;
        const { top, height, } = this.container.nativeElement.getBoundingClientRect();
        const parentTop = parent.getBoundingClientRect().top;
        const labelHeight = this.label.nativeElement.getBoundingClientRect().height;
        this.top = top - parentTop + parent.scrollTop;
        if (height === 0) {
            this.maxMargin = 0;
        }
        else {
            this.maxMargin = height - labelHeight;
        }
    }
    handleScroll(scrollTop) {
        let margin = scrollTop - this.top;
        margin = margin < this.minMargin ? this.minMargin : margin;
        margin = margin > this.maxMargin ? this.maxMargin : margin;
        if (margin === this.margin) {
            return false;
        }
        if (!this.hasStickyPosition) {
            this.label.nativeElement.style.top = `${margin}px`;
        }
        this.margin = margin;
        return true;
    }
    getEmojis() {
        if (this.name === 'Recent') {
            let frequentlyUsed = this.recent || this.frequently.get(this.perLine, this.totalFrequentLines);
            if (!frequentlyUsed || !frequentlyUsed.length) {
                frequentlyUsed = this.frequently.get(this.perLine, this.totalFrequentLines);
            }
            if (frequentlyUsed.length) {
                this.emojis = frequentlyUsed
                    .map(id => {
                    const emoji = this.custom.filter((e) => e.id === id)[0];
                    if (emoji) {
                        return emoji;
                    }
                    return id;
                })
                    .filter(id => !!this.emojiService.getData(id));
            }
            if ((!this.emojis || this.emojis.length === 0) && frequentlyUsed.length > 0) {
                return null;
            }
        }
        if (this.emojis) {
            this.emojis = this.emojis.slice(0);
        }
        return this.emojis;
    }
    updateDisplay(display) {
        this.containerStyles.display = display;
        this.getEmojis();
        this.ref.detectChanges();
    }
    trackById(index, item) {
        return item;
    }
};
CategoryComponent.ɵfac = function CategoryComponent_Factory(t) { return new (t || CategoryComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.EmojiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.EmojiFrequentlyService)); };
CategoryComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CategoryComponent, selectors: [["emoji-category"]], viewQuery: function CategoryComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
        ɵngcc0.ɵɵstaticViewQuery(_c1, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.label = _t.first);
    } }, inputs: { hasStickyPosition: "hasStickyPosition", name: "name", perLine: "perLine", totalFrequentLines: "totalFrequentLines", recent: "recent", custom: "custom", hideObsolete: "hideObsolete", emojis: "emojis", i18n: "i18n", id: "id", notFoundEmoji: "notFoundEmoji", emojiIsNative: "emojiIsNative", emojiSkin: "emojiSkin", emojiSize: "emojiSize", emojiSet: "emojiSet", emojiSheetSize: "emojiSheetSize", emojiForceSize: "emojiForceSize", emojiTooltip: "emojiTooltip", emojiBackgroundImageFn: "emojiBackgroundImageFn", emojiUseButton: "emojiUseButton" }, outputs: { emojiOver: "emojiOver", emojiLeave: "emojiLeave", emojiClick: "emojiClick" }, decls: 8, vars: 10, consts: [[1, "emoji-mart-category", 3, "ngStyle"], ["container", ""], [1, "emoji-mart-category-label", 3, "ngStyle"], ["aria-hidden", "true", 3, "ngStyle"], ["label", ""], [3, "ngIf"], [4, "ngIf"], [3, "emoji", "size", "skin", "isNative", "set", "sheetSize", "forceSize", "tooltip", "backgroundImageFn", "hideObsolete", "emojiOver", "emojiLeave", "emojiClick", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "emoji", "size", "skin", "isNative", "set", "sheetSize", "forceSize", "tooltip", "backgroundImageFn", "hideObsolete", "emojiOver", "emojiLeave", "emojiClick"], ["size", "38", 3, "emoji", "skin", "isNative", "set", "sheetSize", "forceSize", "tooltip", "backgroundImageFn", "useButton"], [1, "emoji-mart-no-results-label"]], template: function CategoryComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "section", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "span", 3, 4);
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, CategoryComponent_ng_template_6_Template, 1, 2, "ng-template", 5);
        ɵngcc0.ɵɵtemplate(7, CategoryComponent_div_7_Template, 5, 10, "div", 6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("emoji-mart-no-results", ctx.emojis && !ctx.emojis.length);
        ɵngcc0.ɵɵproperty("ngStyle", ctx.containerStyles);
        ɵngcc0.ɵɵattribute("aria-label", ctx.i18n.categories[ctx.id]);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngStyle", ctx.labelStyles);
        ɵngcc0.ɵɵattribute("data-name", ctx.name);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngStyle", ctx.labelSpanStyles);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.i18n.categories[ctx.id], " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.emojis);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.emojis && !ctx.emojis.length);
    } }, directives: [ɵngcc3.NgStyle, ɵngcc3.NgIf, ɵngcc3.NgForOf, ɵngcc1.EmojiComponent], encapsulation: 2, changeDetection: 0 });
CategoryComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: EmojiService },
    { type: EmojiFrequentlyService }
];
__decorate([
    Input()
], CategoryComponent.prototype, "emojis", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "hasStickyPosition", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "name", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "perLine", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "totalFrequentLines", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "recent", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "custom", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "i18n", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "id", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "hideObsolete", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "notFoundEmoji", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "emojiIsNative", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "emojiSkin", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "emojiSize", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "emojiSet", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "emojiSheetSize", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "emojiForceSize", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "emojiTooltip", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "emojiBackgroundImageFn", void 0);
__decorate([
    Input()
], CategoryComponent.prototype, "emojiUseButton", void 0);
__decorate([
    Output()
], CategoryComponent.prototype, "emojiOver", void 0);
__decorate([
    Output()
], CategoryComponent.prototype, "emojiLeave", void 0);
__decorate([
    Output()
], CategoryComponent.prototype, "emojiClick", void 0);
__decorate([
    ViewChild('container', { static: true })
], CategoryComponent.prototype, "container", void 0);
__decorate([
    ViewChild('label', { static: true })
], CategoryComponent.prototype, "label", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CategoryComponent, [{
        type: Component,
        args: [{
                selector: 'emoji-category',
                template: `
  <section #container class="emoji-mart-category"
    [attr.aria-label]="i18n.categories[id]"
    [class.emoji-mart-no-results]="emojis && !emojis.length"
    [ngStyle]="containerStyles">
    <div class="emoji-mart-category-label"
      [ngStyle]="labelStyles"
      [attr.data-name]="name">
      <!-- already labeled by the section aria-label -->
      <span #label [ngStyle]="labelSpanStyles" aria-hidden="true">
        {{ i18n.categories[id] }}
      </span>
    </div>

    <ng-template [ngIf]="emojis">
      <ngx-emoji
        *ngFor="let emoji of emojis; trackBy: trackById"
        [emoji]="emoji"
        [size]="emojiSize"
        [skin]="emojiSkin"
        [isNative]="emojiIsNative"
        [set]="emojiSet"
        [sheetSize]="emojiSheetSize"
        [forceSize]="emojiForceSize"
        [tooltip]="emojiTooltip"
        [backgroundImageFn]="emojiBackgroundImageFn"
        [hideObsolete]="hideObsolete"
        (emojiOver)="emojiOver.emit($event)"
        (emojiLeave)="emojiLeave.emit($event)"
        (emojiClick)="emojiClick.emit($event)"
      ></ngx-emoji>
    </ng-template>

    <div *ngIf="emojis && !emojis.length">
      <div>
        <ngx-emoji
          [emoji]="notFoundEmoji"
          size="38"
          [skin]="emojiSkin"
          [isNative]="emojiIsNative"
          [set]="emojiSet"
          [sheetSize]="emojiSheetSize"
          [forceSize]="emojiForceSize"
          [tooltip]="emojiTooltip"
          [backgroundImageFn]="emojiBackgroundImageFn"
          [useButton]="emojiUseButton"
        ></ngx-emoji>
      </div>

      <div class="emoji-mart-no-results-label">
        {{ i18n.notfound }}
      </div>
    </div>

  </section>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.EmojiService }, { type: ɵngcc2.EmojiFrequentlyService }]; }, { hasStickyPosition: [{
            type: Input
        }], name: [{
            type: Input
        }], perLine: [{
            type: Input
        }], totalFrequentLines: [{
            type: Input
        }], recent: [{
            type: Input
        }], custom: [{
            type: Input
        }], hideObsolete: [{
            type: Input
        }], emojiOver: [{
            type: Output
        }], emojiLeave: [{
            type: Output
        }], emojiClick: [{
            type: Output
        }], emojis: [{
            type: Input
        }], i18n: [{
            type: Input
        }], id: [{
            type: Input
        }], notFoundEmoji: [{
            type: Input
        }], emojiIsNative: [{
            type: Input
        }], emojiSkin: [{
            type: Input
        }], emojiSize: [{
            type: Input
        }], emojiSet: [{
            type: Input
        }], emojiSheetSize: [{
            type: Input
        }], emojiForceSize: [{
            type: Input
        }], emojiTooltip: [{
            type: Input
        }], emojiBackgroundImageFn: [{
            type: Input
        }], emojiUseButton: [{
            type: Input
        }], container: [{
            type: ViewChild,
            args: ['container', { static: true }]
        }], label: [{
            type: ViewChild,
            args: ['label', { static: true }]
        }] }); })();
export { CategoryComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,