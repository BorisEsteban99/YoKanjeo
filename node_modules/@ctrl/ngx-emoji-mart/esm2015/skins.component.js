import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function SkinComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 2);
    ɵngcc0.ɵɵelementStart(1, "span", 3);
    ɵngcc0.ɵɵlistener("click", function SkinComponent_span_1_Template_span_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r3); const skinTone_r1 = ctx.$implicit; const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.handleClick(skinTone_r1); })("keyup.enter", function SkinComponent_span_1_Template_span_keyup_enter_1_listener() { ɵngcc0.ɵɵrestoreView(_r3); const skinTone_r1 = ctx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.handleClick(skinTone_r1); })("keyup.space", function SkinComponent_span_1_Template_span_keyup_space_1_listener() { ɵngcc0.ɵɵrestoreView(_r3); const skinTone_r1 = ctx.$implicit; const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.handleClick(skinTone_r1); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const skinTone_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("selected", skinTone_r1 === ctx_r0.skin);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("emoji-mart-skin emoji-mart-skin-tone-", skinTone_r1, "");
    ɵngcc0.ɵɵproperty("tabIndex", ctx_r0.tabIndex(skinTone_r1))("title", ctx_r0.i18n.skintones[skinTone_r1]);
    ɵngcc0.ɵɵattribute("aria-hidden", !ctx_r0.isVisible(skinTone_r1))("aria-pressed", ctx_r0.pressed(skinTone_r1))("aria-haspopup", !!ctx_r0.isSelected(skinTone_r1))("aria-expanded", ctx_r0.expanded(skinTone_r1))("aria-label", ctx_r0.i18n.skintones[skinTone_r1]);
} }
let SkinComponent = class SkinComponent {
    constructor() {
        this.changeSkin = new EventEmitter();
        this.opened = false;
        this.skinTones = [1, 2, 3, 4, 5, 6];
    }
    toggleOpen() {
        this.opened = !this.opened;
    }
    isSelected(skinTone) {
        return skinTone === this.skin;
    }
    isVisible(skinTone) {
        return this.opened || this.isSelected(skinTone);
    }
    pressed(skinTone) {
        return this.opened ? !!this.isSelected(skinTone) : '';
    }
    tabIndex(skinTone) {
        return this.isVisible(skinTone) ? '0' : '';
    }
    expanded(skinTone) {
        return this.isSelected(skinTone) ? this.opened : '';
    }
    handleClick(skin) {
        if (!this.opened) {
            this.opened = true;
            return;
        }
        this.opened = false;
        if (skin !== this.skin) {
            this.changeSkin.emit(skin);
        }
    }
};
SkinComponent.ɵfac = function SkinComponent_Factory(t) { return new (t || SkinComponent)(); };
SkinComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SkinComponent, selectors: [["emoji-skins"]], inputs: { skin: "skin", i18n: "i18n" }, outputs: { changeSkin: "changeSkin" }, decls: 2, vars: 3, consts: [[1, "emoji-mart-skin-swatches"], ["class", "emoji-mart-skin-swatch", 3, "selected", 4, "ngFor", "ngForOf"], [1, "emoji-mart-skin-swatch"], ["role", "button", 3, "tabIndex", "title", "click", "keyup.enter", "keyup.space"]], template: function SkinComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "section", 0);
        ɵngcc0.ɵɵtemplate(1, SkinComponent_span_1_Template, 2, 12, "span", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("opened", ctx.opened);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.skinTones);
    } }, directives: [ɵngcc1.NgForOf], encapsulation: 2, changeDetection: 0 });
__decorate([
    Input()
], SkinComponent.prototype, "skin", void 0);
__decorate([
    Input()
], SkinComponent.prototype, "i18n", void 0);
__decorate([
    Output()
], SkinComponent.prototype, "changeSkin", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SkinComponent, [{
        type: Component,
        args: [{
                selector: 'emoji-skins',
                template: `
    <section
      class="emoji-mart-skin-swatches"
      [class.opened]="opened"
    >
      <span
        *ngFor="let skinTone of skinTones"
        class="emoji-mart-skin-swatch"
        [class.selected]="skinTone === skin"
      >
        <span
          (click)="this.handleClick(skinTone)"
          (keyup.enter)="handleClick(skinTone)"
          (keyup.space)="handleClick(skinTone)"
          class="emoji-mart-skin emoji-mart-skin-tone-{{ skinTone }}"
          role="button"
          [tabIndex]="tabIndex(skinTone)"
          [attr.aria-hidden]="!isVisible(skinTone)"
          [attr.aria-pressed]="pressed(skinTone)"
          [attr.aria-haspopup]="!!isSelected(skinTone)"
          [attr.aria-expanded]="expanded(skinTone)"
          [attr.aria-label]="i18n.skintones[skinTone]"
          [title]="i18n.skintones[skinTone]"
        ></span>
      </span>
    </section>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false
            }]
    }], function () { return []; }, { changeSkin: [{
            type: Output
        }], skin: [{
            type: Input
        }], i18n: [{
            type: Input
        }] }); })();
export { SkinComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tpbnMuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJAY3RybC9uZ3gtZW1vamktbWFydC9za2lucy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxHQUNQLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9DdkIsSUFBYSxhQUFhLEdBQTFCLE1BQWEsYUFBYTtBQUMxQixJQURBO0FBQWdCLFFBSUosZUFBVSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7QUFDcEQsUUFBRSxXQUFNLEdBQUcsS0FBSyxDQUFDO0FBQ2pCLFFBQUUsY0FBUyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNqQyxJQW1DQSxDQUFDO0FBQ0QsSUFuQ0UsVUFBVTtBQUNaLFFBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7QUFDL0IsSUFBRSxDQUFDO0FBQ0gsSUFDRSxVQUFVLENBQUMsUUFBdUI7QUFBSSxRQUNwQyxPQUFPLFFBQVEsS0FBSyxJQUFJLENBQUMsSUFBSSxDQUFDO0FBQ2xDLElBQUUsQ0FBQztBQUNILElBQ0UsU0FBUyxDQUFDLFFBQXVCO0FBQUksUUFDbkMsT0FBTyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDcEQsSUFBRSxDQUFDO0FBQ0gsSUFDRSxPQUFPLENBQUMsUUFBdUI7QUFDakMsUUFBSSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFDMUQsSUFBRSxDQUFDO0FBQ0gsSUFDRSxRQUFRLENBQUMsUUFBdUI7QUFDbEMsUUFBSSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0FBQy9DLElBQUUsQ0FBQztBQUNILElBQ0UsUUFBUSxDQUFDLFFBQXVCO0FBQ2xDLFFBQUksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFDeEQsSUFBRSxDQUFDO0FBQ0gsSUFDRSxXQUFXLENBQUMsSUFBWTtBQUMxQixRQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFO0FBQ3RCLFlBQU0sSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7QUFDekIsWUFBTSxPQUFPO0FBQ2IsU0FBSztBQUNMLFFBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7QUFDeEIsUUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLENBQUMsSUFBSSxFQUFFO0FBQzVCLFlBQU0sSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDakMsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNILENBQUM7Ozs7Ozs7Ozs7K0VBQUE7QUF4Q1U7QUFBYSxJQUFyQixLQUFLLEVBQUU7QUFBQywyQ0FBcUI7QUFDckI7QUFDVCxJQURDLEtBQUssRUFBRTtBQUFDLDJDQUFVO0FBQ1Q7QUFBYSxJQUF0QixNQUFNLEVBQUU7QUFBQyxpREFBd0M7QUFKdkMsYUFBYSxvQkFoQ3pCLFNBQVMsQ0FBQyxVQUNULFFBQVEsRUFBRTtJQUFhLFVBQ3ZCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztTQTBCVCxVQUNELGVBQWUsRUFBRTtjQUF1QixDQUFDO0lBQU07QUFDL0M7SUFBbUI7Q0FBRSxLQUFLLE1BQzNCLENBQUMsSUFDVyxhQUFhLENBMEN6Qjs7Ozs7Ozs7O29CQUNEO0FBQUMsU0EzQ1ksYUFBYTtBQUN6QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE91dHB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEVtb2ppIH0gZnJvbSAnQGN0cmwvbmd4LWVtb2ppLW1hcnQvbmd4LWVtb2ppJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZW1vamktc2tpbnMnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxzZWN0aW9uXG4gICAgICBjbGFzcz1cImVtb2ppLW1hcnQtc2tpbi1zd2F0Y2hlc1wiXG4gICAgICBbY2xhc3Mub3BlbmVkXT1cIm9wZW5lZFwiXG4gICAgPlxuICAgICAgPHNwYW5cbiAgICAgICAgKm5nRm9yPVwibGV0IHNraW5Ub25lIG9mIHNraW5Ub25lc1wiXG4gICAgICAgIGNsYXNzPVwiZW1vamktbWFydC1za2luLXN3YXRjaFwiXG4gICAgICAgIFtjbGFzcy5zZWxlY3RlZF09XCJza2luVG9uZSA9PT0gc2tpblwiXG4gICAgICA+XG4gICAgICAgIDxzcGFuXG4gICAgICAgICAgKGNsaWNrKT1cInRoaXMuaGFuZGxlQ2xpY2soc2tpblRvbmUpXCJcbiAgICAgICAgICAoa2V5dXAuZW50ZXIpPVwiaGFuZGxlQ2xpY2soc2tpblRvbmUpXCJcbiAgICAgICAgICAoa2V5dXAuc3BhY2UpPVwiaGFuZGxlQ2xpY2soc2tpblRvbmUpXCJcbiAgICAgICAgICBjbGFzcz1cImVtb2ppLW1hcnQtc2tpbiBlbW9qaS1tYXJ0LXNraW4tdG9uZS17eyBza2luVG9uZSB9fVwiXG4gICAgICAgICAgcm9sZT1cImJ1dHRvblwiXG4gICAgICAgICAgW3RhYkluZGV4XT1cInRhYkluZGV4KHNraW5Ub25lKVwiXG4gICAgICAgICAgW2F0dHIuYXJpYS1oaWRkZW5dPVwiIWlzVmlzaWJsZShza2luVG9uZSlcIlxuICAgICAgICAgIFthdHRyLmFyaWEtcHJlc3NlZF09XCJwcmVzc2VkKHNraW5Ub25lKVwiXG4gICAgICAgICAgW2F0dHIuYXJpYS1oYXNwb3B1cF09XCIhIWlzU2VsZWN0ZWQoc2tpblRvbmUpXCJcbiAgICAgICAgICBbYXR0ci5hcmlhLWV4cGFuZGVkXT1cImV4cGFuZGVkKHNraW5Ub25lKVwiXG4gICAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJpMThuLnNraW50b25lc1tza2luVG9uZV1cIlxuICAgICAgICAgIFt0aXRsZV09XCJpMThuLnNraW50b25lc1tza2luVG9uZV1cIlxuICAgICAgICA+PC9zcGFuPlxuICAgICAgPC9zcGFuPlxuICAgIDwvc2VjdGlvbj5cbiAgYCxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBTa2luQ29tcG9uZW50IHtcbiAgLyoqIGN1cnJlbnRseSBzZWxlY3RlZCBza2luICovXG4gIEBJbnB1dCgpIHNraW4/OiBFbW9qaVsnc2tpbiddO1xuICBASW5wdXQoKSBpMThuOiBhbnk7XG4gIEBPdXRwdXQoKSBjaGFuZ2VTa2luID0gbmV3IEV2ZW50RW1pdHRlcjxudW1iZXI+KCk7XG4gIG9wZW5lZCA9IGZhbHNlO1xuICBza2luVG9uZXMgPSBbMSwgMiwgMywgNCwgNSwgNl07XG5cbiAgdG9nZ2xlT3BlbigpIHtcbiAgICB0aGlzLm9wZW5lZCA9ICF0aGlzLm9wZW5lZDtcbiAgfVxuXG4gIGlzU2VsZWN0ZWQoc2tpblRvbmU6IEVtb2ppWydza2luJ10pOiBib29sZWFuIHtcbiAgICByZXR1cm4gc2tpblRvbmUgPT09IHRoaXMuc2tpbjtcbiAgfVxuXG4gIGlzVmlzaWJsZShza2luVG9uZTogRW1vamlbJ3NraW4nXSk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLm9wZW5lZCB8fCB0aGlzLmlzU2VsZWN0ZWQoc2tpblRvbmUpO1xuICB9XG5cbiAgcHJlc3NlZChza2luVG9uZTogRW1vamlbJ3NraW4nXSkge1xuICAgIHJldHVybiB0aGlzLm9wZW5lZCA/ICEhdGhpcy5pc1NlbGVjdGVkKHNraW5Ub25lKSA6ICcnO1xuICB9XG5cbiAgdGFiSW5kZXgoc2tpblRvbmU6IEVtb2ppWydza2luJ10pIHtcbiAgICByZXR1cm4gdGhpcy5pc1Zpc2libGUoc2tpblRvbmUpID8gJzAnIDogJyc7XG4gIH1cblxuICBleHBhbmRlZChza2luVG9uZTogRW1vamlbJ3NraW4nXSkge1xuICAgIHJldHVybiB0aGlzLmlzU2VsZWN0ZWQoc2tpblRvbmUpID8gdGhpcy5vcGVuZWQgOiAnJztcbiAgfVxuXG4gIGhhbmRsZUNsaWNrKHNraW46IG51bWJlcikge1xuICAgIGlmICghdGhpcy5vcGVuZWQpIHtcbiAgICAgIHRoaXMub3BlbmVkID0gdHJ1ZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5vcGVuZWQgPSBmYWxzZTtcbiAgICBpZiAoc2tpbiAhPT0gdGhpcy5za2luKSB7XG4gICAgICB0aGlzLmNoYW5nZVNraW4uZW1pdChza2luKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==