import { __assign, __decorate, __read, __spread, __values } from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, QueryList, ViewChild, ViewChildren, } from '@angular/core';
import { categories, } from '@ctrl/ngx-emoji-mart/ngx-emoji';
import { EmojiFrequentlyService } from './emoji-frequently.service';
import * as icons from './svgs';
import { measureScrollbar } from './utils';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './emoji-frequently.service';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from './anchors.component';
import * as ɵngcc4 from './search.component';
import * as ɵngcc5 from './category.component';
import * as ɵngcc6 from './preview.component';

var _c0 = ["scrollRef"];
var _c1 = ["previewRef"];
var _c2 = ["searchRef"];
var _c3 = ["categoryRef"];
function PickerComponent_emoji_search_3_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "emoji-search", 8, 9);
    ɵngcc0.ɵɵlistener("searchResults", function PickerComponent_emoji_search_3_Template_emoji_search_searchResults_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.handleSearch($event); })("enterKey", function PickerComponent_emoji_search_3_Template_emoji_search_enterKey_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); var ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.handleEnterKey($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("i18n", ctx_r0.i18n)("include", ctx_r0.include)("exclude", ctx_r0.exclude)("custom", ctx_r0.custom)("autoFocus", ctx_r0.autoFocus)("icons", ctx_r0.searchIcons)("emojisToShowFilter", ctx_r0.emojisToShowFilter);
} }
function PickerComponent_emoji_category_6_Template(rf, ctx) { if (rf & 1) {
    var _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "emoji-category", 10, 11);
    ɵngcc0.ɵɵlistener("emojiOver", function PickerComponent_emoji_category_6_Template_emoji_category_emojiOver_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.handleEmojiOver($event); })("emojiLeave", function PickerComponent_emoji_category_6_Template_emoji_category_emojiLeave_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.handleEmojiLeave(); })("emojiClick", function PickerComponent_emoji_category_6_Template_emoji_category_emojiClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); var ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.handleEmojiClick($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var category_r8 = ctx.$implicit;
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("id", category_r8.id)("name", category_r8.name)("emojis", category_r8.emojis)("perLine", ctx_r2.perLine)("totalFrequentLines", ctx_r2.totalFrequentLines)("hasStickyPosition", ctx_r2.isNative)("i18n", ctx_r2.i18n)("hideObsolete", ctx_r2.hideObsolete)("notFoundEmoji", ctx_r2.notFoundEmoji)("custom", category_r8.id == ctx_r2.RECENT_CATEGORY.id ? ctx_r2.CUSTOM_CATEGORY.emojis : undefined)("recent", category_r8.id == ctx_r2.RECENT_CATEGORY.id ? ctx_r2.recent : undefined)("emojiIsNative", ctx_r2.isNative)("emojiSkin", ctx_r2.skin)("emojiSize", ctx_r2.emojiSize)("emojiSet", ctx_r2.set)("emojiSheetSize", ctx_r2.sheetSize)("emojiForceSize", ctx_r2.isNative)("emojiTooltip", ctx_r2.emojiTooltip)("emojiBackgroundImageFn", ctx_r2.backgroundImageFn)("emojiUseButton", false);
} }
function PickerComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    var _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "emoji-preview", 12, 13);
    ɵngcc0.ɵɵlistener("skinChange", function PickerComponent_div_7_Template_emoji_preview_skinChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); var ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.handleSkinChange($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("title", ctx_r3.title)("emoji", ctx_r3.previewEmoji)("idleEmoji", ctx_r3.emoji)("emojiIsNative", ctx_r3.isNative)("emojiSize", 38)("emojiSkin", ctx_r3.skin)("emojiSet", ctx_r3.set)("i18n", ctx_r3.i18n)("emojiSheetSize", ctx_r3.sheetSize)("emojiBackgroundImageFn", ctx_r3.backgroundImageFn);
} }
var I18N = {
    search: 'Search',
    emojilist: 'List of emoji',
    notfound: 'No Emoji Found',
    clear: 'Clear',
    categories: {
        search: 'Search Results',
        recent: 'Frequently Used',
        people: 'Smileys & People',
        nature: 'Animals & Nature',
        foods: 'Food & Drink',
        activity: 'Activity',
        places: 'Travel & Places',
        objects: 'Objects',
        symbols: 'Symbols',
        flags: 'Flags',
        custom: 'Custom',
    },
    skintones: {
        1: 'Default Skin Tone',
        2: 'Light Skin Tone',
        3: 'Medium-Light Skin Tone',
        4: 'Medium Skin Tone',
        5: 'Medium-Dark Skin Tone',
        6: 'Dark Skin Tone',
    },
};
var PickerComponent = /** @class */ (function () {
    function PickerComponent(ref, frequently) {
        var _this = this;
        this.ref = ref;
        this.frequently = frequently;
        this.perLine = 9;
        this.totalFrequentLines = 4;
        this.i18n = {};
        this.style = {};
        this.title = 'Emoji Mart™';
        this.emoji = 'department_store';
        this.darkMode = !!(typeof matchMedia === 'function' &&
            matchMedia('(prefers-color-scheme: dark)').matches);
        this.color = '#ae65c5';
        this.hideObsolete = true;
        /** all categories shown */
        this.categories = [];
        /** used to temporarily draw categories */
        this.activeCategories = [];
        this.set = 'apple';
        this.skin = 1;
        /** Renders the native unicode emoji */
        this.isNative = false;
        this.emojiSize = 24;
        this.sheetSize = 64;
        this.showPreview = true;
        this.emojiTooltip = false;
        this.autoFocus = false;
        this.custom = [];
        this.hideRecent = true;
        this.notFoundEmoji = 'sleuth_or_spy';
        this.categoriesIcons = icons.categories;
        this.searchIcons = icons.search;
        this.useButton = false;
        this.enableFrequentEmojiSort = false;
        this.enableSearch = true;
        this.showSingleCategory = false;
        this.emojiClick = new EventEmitter();
        this.emojiSelect = new EventEmitter();
        this.skinChange = new EventEmitter();
        this.scrollHeight = 0;
        this.clientHeight = 0;
        this.firstRender = true;
        this.NAMESPACE = 'emoji-mart';
        this.measureScrollbar = 0;
        this.RECENT_CATEGORY = {
            id: 'recent',
            name: 'Recent',
            emojis: null,
        };
        this.SEARCH_CATEGORY = {
            id: 'search',
            name: 'Search',
            emojis: null,
            anchor: false,
        };
        this.CUSTOM_CATEGORY = {
            id: 'custom',
            name: 'Custom',
            emojis: [],
        };
        this.backgroundImageFn = function (set, sheetSize) {
            return "https://unpkg.com/emoji-datasource-" + _this.set + "@5.0.1/img/" + _this.set + "/sheets-256/" + _this.sheetSize + ".png";
        };
    }
    PickerComponent.prototype.ngOnInit = function () {
        var e_1, _a;
        var _this = this;
        // measure scroll
        this.measureScrollbar = measureScrollbar();
        this.i18n = __assign(__assign({}, I18N), this.i18n);
        this.i18n.categories = __assign(__assign({}, I18N.categories), this.i18n.categories);
        this.skin =
            JSON.parse(localStorage.getItem(this.NAMESPACE + ".skin") || 'null') ||
                this.skin;
        var allCategories = __spread(categories);
        if (this.custom.length > 0) {
            this.CUSTOM_CATEGORY.emojis = this.custom.map(function (emoji) {
                return __assign(__assign({}, emoji), { 
                    // `<Category />` expects emoji to have an `id`.
                    id: emoji.shortNames[0], custom: true });
            });
            allCategories.push(this.CUSTOM_CATEGORY);
        }
        if (this.include !== undefined) {
            allCategories.sort(function (a, b) {
                if (_this.include.indexOf(a.id) > _this.include.indexOf(b.id)) {
                    return 1;
                }
                return -1;
            });
        }
        try {
            for (var allCategories_1 = __values(allCategories), allCategories_1_1 = allCategories_1.next(); !allCategories_1_1.done; allCategories_1_1 = allCategories_1.next()) {
                var category = allCategories_1_1.value;
                var isIncluded = this.include && this.include.length
                    ? this.include.indexOf(category.id) > -1
                    : true;
                var isExcluded = this.exclude && this.exclude.length
                    ? this.exclude.indexOf(category.id) > -1
                    : false;
                if (!isIncluded || isExcluded) {
                    continue;
                }
                if (this.emojisToShowFilter) {
                    var newEmojis = [];
                    var emojis = category.emojis;
                    // tslint:disable-next-line: prefer-for-of
                    for (var emojiIndex = 0; emojiIndex < emojis.length; emojiIndex++) {
                        var emoji = emojis[emojiIndex];
                        if (this.emojisToShowFilter(emoji)) {
                            newEmojis.push(emoji);
                        }
                    }
                    if (newEmojis.length) {
                        var newCategory = {
                            emojis: newEmojis,
                            name: category.name,
                            id: category.id,
                        };
                        this.categories.push(newCategory);
                    }
                }
                else {
                    this.categories.push(category);
                }
                this.categoriesIcons = __assign(__assign({}, icons.categories), this.categoriesIcons);
                this.searchIcons = __assign(__assign({}, icons.search), this.searchIcons);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (allCategories_1_1 && !allCategories_1_1.done && (_a = allCategories_1.return)) _a.call(allCategories_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var includeRecent = this.include && this.include.length
            ? this.include.indexOf(this.RECENT_CATEGORY.id) > -1
            : true;
        var excludeRecent = this.exclude && this.exclude.length
            ? this.exclude.indexOf(this.RECENT_CATEGORY.id) > -1
            : false;
        if (includeRecent && !excludeRecent) {
            this.hideRecent = false;
            this.categories.unshift(this.RECENT_CATEGORY);
        }
        if (this.categories[0]) {
            this.categories[0].first = true;
        }
        this.categories.unshift(this.SEARCH_CATEGORY);
        this.selected = this.categories.filter(function (category) { return category.first; })[0].name;
        // Need to be careful if small number of categories
        var categoriesToLoadFirst = Math.min(this.categories.length, 3);
        this.setActiveCategories(this.activeCategories = this.categories.slice(0, categoriesToLoadFirst));
        // Trim last active category
        var lastActiveCategoryEmojis = this.categories[categoriesToLoadFirst - 1].emojis.slice();
        this.categories[categoriesToLoadFirst - 1].emojis = lastActiveCategoryEmojis.slice(0, 60);
        this.ref.markForCheck();
        setTimeout(function () {
            // Restore last category
            _this.categories[categoriesToLoadFirst - 1].emojis = lastActiveCategoryEmojis;
            _this.setActiveCategories(_this.categories);
            _this.ref.markForCheck();
            setTimeout(function () { return _this.updateCategoriesSize(); });
        });
    };
    PickerComponent.prototype.setActiveCategories = function (categoriesToMakeActive) {
        var _this = this;
        if (this.showSingleCategory) {
            this.activeCategories = categoriesToMakeActive.filter(function (x) { return (x.name === _this.selected || x === _this.SEARCH_CATEGORY); });
        }
        else {
            this.activeCategories = categoriesToMakeActive;
        }
    };
    PickerComponent.prototype.updateCategoriesSize = function () {
        this.categoryRefs.forEach(function (component) { return component.memoizeSize(); });
        if (this.scrollRef) {
            var target = this.scrollRef.nativeElement;
            this.scrollHeight = target.scrollHeight;
            this.clientHeight = target.clientHeight;
        }
    };
    PickerComponent.prototype.handleAnchorClick = function ($event) {
        this.updateCategoriesSize();
        this.selected = $event.category.name;
        this.setActiveCategories(this.categories);
        if (this.SEARCH_CATEGORY.emojis) {
            this.handleSearch(null);
            this.searchRef.clear();
            this.handleAnchorClick($event);
            return;
        }
        var component = this.categoryRefs.find(function (n) { return n.id === $event.category.id; });
        if (component) {
            var top_1 = component.top;
            if ($event.category.first) {
                top_1 = 0;
            }
            else {
                top_1 += 1;
            }
            this.scrollRef.nativeElement.scrollTop = top_1;
        }
        this.selected = $event.category.name;
        this.nextScroll = $event.category.name;
    };
    PickerComponent.prototype.categoryTrack = function (index, item) {
        return item.id;
    };
    PickerComponent.prototype.handleScroll = function () {
        var e_2, _a;
        if (this.nextScroll) {
            this.selected = this.nextScroll;
            this.nextScroll = undefined;
            return;
        }
        if (!this.scrollRef) {
            return;
        }
        if (this.showSingleCategory) {
            return;
        }
        var activeCategory = null;
        if (this.SEARCH_CATEGORY.emojis) {
            activeCategory = this.SEARCH_CATEGORY;
        }
        else {
            var target = this.scrollRef.nativeElement;
            // check scroll is not at bottom
            if (target.scrollTop === 0) {
                // hit the TOP
                activeCategory = this.categories.find(function (n) { return n.first === true; });
            }
            else if (target.scrollHeight - target.scrollTop === this.clientHeight) {
                // scrolled to bottom activate last category
                activeCategory = this.categories[this.categories.length - 1];
            }
            else {
                var _loop_1 = function (category) {
                    var component = this_1.categoryRefs.find(function (n) { return n.id === category.id; });
                    var active = component.handleScroll(target.scrollTop);
                    if (active) {
                        activeCategory = category;
                    }
                };
                var this_1 = this;
                try {
                    // scrolling
                    for (var _b = __values(this.categories), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var category = _c.value;
                        _loop_1(category);
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
            }
            this.scrollTop = target.scrollTop;
        }
        if (activeCategory) {
            this.selected = activeCategory.name;
        }
    };
    PickerComponent.prototype.handleSearch = function ($emojis) {
        var e_3, _a;
        this.SEARCH_CATEGORY.emojis = $emojis;
        try {
            for (var _b = __values(this.categoryRefs.toArray()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var component = _c.value;
                if (component.name === 'Search') {
                    component.emojis = $emojis;
                    component.updateDisplay($emojis ? 'block' : 'none');
                }
                else {
                    component.updateDisplay($emojis ? 'none' : 'block');
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        this.scrollRef.nativeElement.scrollTop = 0;
        this.handleScroll();
    };
    PickerComponent.prototype.handleEnterKey = function ($event, emoji) {
        if (!emoji) {
            if (this.SEARCH_CATEGORY.emojis !== null && this.SEARCH_CATEGORY.emojis.length) {
                emoji = this.SEARCH_CATEGORY.emojis[0];
                if (emoji) {
                    this.emojiSelect.emit({ $event: $event, emoji: emoji });
                }
                else {
                    return;
                }
            }
        }
        if (!this.hideRecent && !this.recent) {
            this.frequently.add(emoji);
        }
        var component = this.categoryRefs.toArray()[1];
        if (component && this.enableFrequentEmojiSort) {
            component.getEmojis();
            component.ref.markForCheck();
        }
    };
    PickerComponent.prototype.handleEmojiOver = function ($event) {
        if (!this.showPreview || !this.previewRef) {
            return;
        }
        var emojiData = this.CUSTOM_CATEGORY.emojis.find(function (customEmoji) { return customEmoji.id === $event.emoji.id; });
        if (emojiData) {
            $event.emoji = __assign({}, emojiData);
        }
        this.previewEmoji = $event.emoji;
        clearTimeout(this.leaveTimeout);
    };
    PickerComponent.prototype.handleEmojiLeave = function () {
        var _this = this;
        if (!this.showPreview || !this.previewRef) {
            return;
        }
        this.leaveTimeout = setTimeout(function () {
            _this.previewEmoji = null;
            _this.previewRef.ref.markForCheck();
        }, 16);
    };
    PickerComponent.prototype.handleEmojiClick = function ($event) {
        this.emojiClick.emit($event);
        this.emojiSelect.emit($event);
        this.handleEnterKey($event.$event, $event.emoji);
    };
    PickerComponent.prototype.handleSkinChange = function (skin) {
        this.skin = skin;
        localStorage.setItem(this.NAMESPACE + ".skin", String(skin));
        this.skinChange.emit(skin);
    };
    PickerComponent.prototype.getWidth = function () {
        if (this.style && this.style.width) {
            return this.style.width;
        }
        return this.perLine * (this.emojiSize + 12) + 12 + 2 + this.measureScrollbar + 'px';
    };
    PickerComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: EmojiFrequentlyService }
    ]; };
    __decorate([
        Input()
    ], PickerComponent.prototype, "perLine", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "totalFrequentLines", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "i18n", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "style", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "title", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "emoji", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "darkMode", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "color", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "hideObsolete", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "categories", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "activeCategories", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "set", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "skin", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "isNative", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "emojiSize", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "sheetSize", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "emojisToShowFilter", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "showPreview", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "emojiTooltip", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "autoFocus", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "custom", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "hideRecent", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "include", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "exclude", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "notFoundEmoji", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "categoriesIcons", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "searchIcons", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "useButton", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "enableFrequentEmojiSort", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "enableSearch", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "showSingleCategory", void 0);
    __decorate([
        Output()
    ], PickerComponent.prototype, "emojiClick", void 0);
    __decorate([
        Output()
    ], PickerComponent.prototype, "emojiSelect", void 0);
    __decorate([
        Output()
    ], PickerComponent.prototype, "skinChange", void 0);
    __decorate([
        ViewChild('scrollRef', { static: true })
    ], PickerComponent.prototype, "scrollRef", void 0);
    __decorate([
        ViewChild('previewRef')
    ], PickerComponent.prototype, "previewRef", void 0);
    __decorate([
        ViewChild('searchRef', { static: true })
    ], PickerComponent.prototype, "searchRef", void 0);
    __decorate([
        ViewChildren('categoryRef')
    ], PickerComponent.prototype, "categoryRefs", void 0);
    __decorate([
        Input()
    ], PickerComponent.prototype, "backgroundImageFn", void 0);
PickerComponent.ɵfac = function PickerComponent_Factory(t) { return new (t || PickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.EmojiFrequentlyService)); };
PickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PickerComponent, selectors: [["emoji-mart"]], viewQuery: function PickerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
        ɵngcc0.ɵɵviewQuery(_c1, true);
        ɵngcc0.ɵɵstaticViewQuery(_c2, true);
        ɵngcc0.ɵɵviewQuery(_c3, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollRef = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.previewRef = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchRef = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.categoryRefs = _t);
    } }, inputs: { perLine: "perLine", totalFrequentLines: "totalFrequentLines", i18n: "i18n", style: "style", title: "title", emoji: "emoji", darkMode: "darkMode", color: "color", hideObsolete: "hideObsolete", categories: "categories", activeCategories: "activeCategories", set: "set", skin: "skin", isNative: "isNative", emojiSize: "emojiSize", sheetSize: "sheetSize", showPreview: "showPreview", emojiTooltip: "emojiTooltip", autoFocus: "autoFocus", custom: "custom", hideRecent: "hideRecent", notFoundEmoji: "notFoundEmoji", categoriesIcons: "categoriesIcons", searchIcons: "searchIcons", useButton: "useButton", enableFrequentEmojiSort: "enableFrequentEmojiSort", enableSearch: "enableSearch", showSingleCategory: "showSingleCategory", backgroundImageFn: "backgroundImageFn", emojisToShowFilter: "emojisToShowFilter", include: "include", exclude: "exclude" }, outputs: { emojiClick: "emojiClick", emojiSelect: "emojiSelect", skinChange: "skinChange" }, decls: 8, vars: 16, consts: [[3, "ngStyle"], [1, "emoji-mart-bar"], [3, "categories", "color", "selected", "i18n", "icons", "anchorClick"], [3, "i18n", "include", "exclude", "custom", "autoFocus", "icons", "emojisToShowFilter", "searchResults", "enterKey", 4, "ngIf"], [1, "emoji-mart-scroll", 3, "scroll"], ["scrollRef", ""], [3, "id", "name", "emojis", "perLine", "totalFrequentLines", "hasStickyPosition", "i18n", "hideObsolete", "notFoundEmoji", "custom", "recent", "emojiIsNative", "emojiSkin", "emojiSize", "emojiSet", "emojiSheetSize", "emojiForceSize", "emojiTooltip", "emojiBackgroundImageFn", "emojiUseButton", "emojiOver", "emojiLeave", "emojiClick", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["class", "emoji-mart-bar", 4, "ngIf"], [3, "i18n", "include", "exclude", "custom", "autoFocus", "icons", "emojisToShowFilter", "searchResults", "enterKey"], ["searchRef", ""], [3, "id", "name", "emojis", "perLine", "totalFrequentLines", "hasStickyPosition", "i18n", "hideObsolete", "notFoundEmoji", "custom", "recent", "emojiIsNative", "emojiSkin", "emojiSize", "emojiSet", "emojiSheetSize", "emojiForceSize", "emojiTooltip", "emojiBackgroundImageFn", "emojiUseButton", "emojiOver", "emojiLeave", "emojiClick"], ["categoryRef", ""], [3, "title", "emoji", "idleEmoji", "emojiIsNative", "emojiSize", "emojiSkin", "emojiSet", "i18n", "emojiSheetSize", "emojiBackgroundImageFn", "skinChange"], ["previewRef", ""]], template: function PickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "section", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "emoji-mart-anchors", 2);
        ɵngcc0.ɵɵlistener("anchorClick", function PickerComponent_Template_emoji_mart_anchors_anchorClick_2_listener($event) { return ctx.handleAnchorClick($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, PickerComponent_emoji_search_3_Template, 2, 7, "emoji-search", 3);
        ɵngcc0.ɵɵelementStart(4, "section", 4, 5);
        ɵngcc0.ɵɵlistener("scroll", function PickerComponent_Template_section_scroll_4_listener() { return ctx.handleScroll(); });
        ɵngcc0.ɵɵtemplate(6, PickerComponent_emoji_category_6_Template, 2, 20, "emoji-category", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, PickerComponent_div_7_Template, 3, 10, "div", 7);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("emoji-mart ", ctx.darkMode ? "emoji-mart-dark" : "", "");
        ɵngcc0.ɵɵstyleProp("width", ctx.getWidth());
        ɵngcc0.ɵɵproperty("ngStyle", ctx.style);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("categories", ctx.categories)("color", ctx.color)("selected", ctx.selected)("i18n", ctx.i18n)("icons", ctx.categoriesIcons);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.enableSearch);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("aria-label", ctx.i18n.emojilist);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.activeCategories)("ngForTrackBy", ctx.categoryTrack);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showPreview);
    } }, directives: [ɵngcc2.NgStyle, ɵngcc3.AnchorsComponent, ɵngcc2.NgIf, ɵngcc2.NgForOf, ɵngcc4.SearchComponent, ɵngcc5.CategoryComponent, ɵngcc6.PreviewComponent], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PickerComponent, [{
        type: Component,
        args: [{
                selector: 'emoji-mart',
                template: "<section class=\"emoji-mart {{ darkMode ? 'emoji-mart-dark' : '' }}\"\n  [style.width]=\"getWidth()\"\n  [ngStyle]=\"style\">\n  <div class=\"emoji-mart-bar\">\n    <emoji-mart-anchors\n      [categories]=\"categories\"\n      (anchorClick)=\"handleAnchorClick($event)\"\n      [color]=\"color\"\n      [selected]=\"selected\"\n      [i18n]=\"i18n\"\n      [icons]=\"categoriesIcons\"\n    ></emoji-mart-anchors>\n  </div>\n  <emoji-search\n    *ngIf=\"enableSearch\"\n    #searchRef\n    [i18n]=\"i18n\"\n    (searchResults)=\"handleSearch($event)\"\n    (enterKey)=\"handleEnterKey($event)\"\n    [include]=\"include\"\n    [exclude]=\"exclude\"\n    [custom]=\"custom\"\n    [autoFocus]=\"autoFocus\"\n    [icons]=\"searchIcons\"\n    [emojisToShowFilter]=\"emojisToShowFilter\"\n  ></emoji-search>\n  <section #scrollRef class=\"emoji-mart-scroll\" (scroll)=\"handleScroll()\" [attr.aria-label]=\"i18n.emojilist\">\n    <emoji-category\n      *ngFor=\"let category of activeCategories; let idx = index; trackBy: categoryTrack\"\n      #categoryRef\n      [id]=\"category.id\"\n      [name]=\"category.name\"\n      [emojis]=\"category.emojis\"\n      [perLine]=\"perLine\"\n      [totalFrequentLines]=\"totalFrequentLines\"\n      [hasStickyPosition]=\"isNative\"\n      [i18n]=\"i18n\"\n      [hideObsolete]=\"hideObsolete\"\n      [notFoundEmoji]=\"notFoundEmoji\"\n      [custom]=\"category.id == RECENT_CATEGORY.id ? CUSTOM_CATEGORY.emojis : undefined\"\n      [recent]=\"category.id == RECENT_CATEGORY.id ? recent : undefined\"\n      [emojiIsNative]=\"isNative\"\n      [emojiSkin]=\"skin\"\n      [emojiSize]=\"emojiSize\"\n      [emojiSet]=\"set\"\n      [emojiSheetSize]=\"sheetSize\"\n      [emojiForceSize]=\"isNative\"\n      [emojiTooltip]=\"emojiTooltip\"\n      [emojiBackgroundImageFn]=\"backgroundImageFn\"\n      [emojiUseButton]=\"false\"\n      (emojiOver)=\"handleEmojiOver($event)\"\n      (emojiLeave)=\"handleEmojiLeave()\"\n      (emojiClick)=\"handleEmojiClick($event)\"\n    ></emoji-category>\n  </section>\n  <div class=\"emoji-mart-bar\" *ngIf=\"showPreview\">\n    <emoji-preview\n      #previewRef\n      [title]=\"title\"\n      [emoji]=\"previewEmoji\"\n      [idleEmoji]=\"emoji\"\n      [emojiIsNative]=\"isNative\"\n      [emojiSize]=\"38\"\n      [emojiSkin]=\"skin\"\n      [emojiSet]=\"set\"\n      [i18n]=\"i18n\"\n      [emojiSheetSize]=\"sheetSize\"\n      [emojiBackgroundImageFn]=\"backgroundImageFn\"\n      (skinChange)=\"handleSkinChange($event)\"\n    ></emoji-preview>\n  </div>\n</section>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                preserveWhitespaces: false
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.EmojiFrequentlyService }]; }, { perLine: [{
            type: Input
        }], totalFrequentLines: [{
            type: Input
        }], i18n: [{
            type: Input
        }], style: [{
            type: Input
        }], title: [{
            type: Input
        }], emoji: [{
            type: Input
        }], darkMode: [{
            type: Input
        }], color: [{
            type: Input
        }], hideObsolete: [{
            type: Input
        }], categories: [{
            type: Input
        }], activeCategories: [{
            type: Input
        }], set: [{
            type: Input
        }], skin: [{
            type: Input
        }], isNative: [{
            type: Input
        }], emojiSize: [{
            type: Input
        }], sheetSize: [{
            type: Input
        }], showPreview: [{
            type: Input
        }], emojiTooltip: [{
            type: Input
        }], autoFocus: [{
            type: Input
        }], custom: [{
            type: Input
        }], hideRecent: [{
            type: Input
        }], notFoundEmoji: [{
            type: Input
        }], categoriesIcons: [{
            type: Input
        }], searchIcons: [{
            type: Input
        }], useButton: [{
            type: Input
        }], enableFrequentEmojiSort: [{
            type: Input
        }], enableSearch: [{
            type: Input
        }], showSingleCategory: [{
            type: Input
        }], emojiClick: [{
            type: Output
        }], emojiSelect: [{
            type: Output
        }], skinChange: [{
            type: Output
        }], backgroundImageFn: [{
            type: Input
        }], emojisToShowFilter: [{
            type: Input
        }], include: [{
            type: Input
        }], exclude: [{
            type: Input
        }], scrollRef: [{
            type: ViewChild,
            args: ['scrollRef', { static: true }]
        }], previewRef: [{
            type: ViewChild,
            args: ['previewRef']
        }], searchRef: [{
            type: ViewChild,
            args: ['searchRef', { static: true }]
        }], categoryRefs: [{
            type: ViewChildren,
            args: ['categoryRef']
        }] }); })();
    return PickerComponent;
}());
export { PickerComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,