/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, ElementRef, ViewChild } from '@angular/core';
import { CrystalLightbox } from './dom.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './dom.service';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from './masonry-layout.component';

var _c0 = ["contentWrapper"];
function GalleryComponent_masonry_layout_3_Template(rf, ctx) { if (rf & 1) {
    var _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "masonry-layout", 3);
    ɵngcc0.ɵɵlistener("events", function GalleryComponent_masonry_layout_3_Template_masonry_layout_events_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); var ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.handleMasonryLayoutEvents($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("max-height", ctx_r1.masonryMaxHeight)("gutter", ctx_r1.masonryGutter)("masonry", ctx_r1.masonryState)("class-name", "cg-image")("images", ctx_r1.images);
} }
var _c1 = ["*"];
var GalleryComponent = /** @class */ (function () {
    function GalleryComponent(lightbox, elementRef) {
        this.lightbox = lightbox;
        this.elementRef = elementRef;
        this.config = {};
    }
    Object.defineProperty(GalleryComponent.prototype, "isNgContent", {
        get: /**
         * @return {?}
         */
        function () {
            return this.contentWrapper.nativeElement.children.length > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GalleryComponent.prototype, "masonryState", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.masonry;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GalleryComponent.prototype, "masonryMaxHeight", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.masonryMaxHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GalleryComponent.prototype, "masonryGutter", {
        get: /**
         * @return {?}
         */
        function () {
            return this.config.masonryGutter;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} images
     * @param {?} i
     * @return {?}
     */
    GalleryComponent.prototype.showLightbox = /**
     * @param {?} images
     * @param {?} i
     * @return {?}
     */
    function (images, i) {
        this.config.index = i;
        this.lightbox.open(images, this.config);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    GalleryComponent.prototype.handleMasonryLayoutEvents = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.showLightbox(this.images, event.index);
    };
    /** @nocollapse */
    GalleryComponent.ctorParameters = function () { return [
        { type: CrystalLightbox },
        { type: ElementRef }
    ]; };
    GalleryComponent.propDecorators = {
        images: [{ type: Input, args: ['images',] }],
        config: [{ type: Input, args: ['config',] }],
        contentWrapper: [{ type: ViewChild, args: ['contentWrapper',] }]
    };
GalleryComponent.ɵfac = function GalleryComponent_Factory(t) { return new (t || GalleryComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CrystalLightbox), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
GalleryComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GalleryComponent, selectors: [["crystal-gallery"]], viewQuery: function GalleryComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentWrapper = _t.first);
    } }, inputs: { config: "config", images: "images" }, ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[3, "hidden"], ["contentWrapper", ""], ["class", "cg-wrapper", 3, "max-height", "gutter", "masonry", "class-name", "images", "events", 4, "ngIf"], [1, "cg-wrapper", 3, "max-height", "gutter", "masonry", "class-name", "images", "events"]], template: function GalleryComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, GalleryComponent_masonry_layout_3_Template, 1, 5, "masonry-layout", 2);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("hidden", ctx.isNgContent);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isNgContent);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.MasonryLayoutComponent], styles: ["[_nghost-%COMP%]{display:block;width:100%}[_nghost-%COMP%]   .cg-wrapper[_ngcontent-%COMP%]{display:block;width:100%;overflow:hidden}[_nghost-%COMP%]   .cg-wrapper.cg-show[_ngcontent-%COMP%]{height:auto;position:relative;display:table}[_nghost-%COMP%]   .cg-image[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{cursor:pointer;width:100%}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GalleryComponent, [{
        type: Component,
        args: [{
                selector: 'crystal-gallery',
                template: "<div #contentWrapper [hidden]=\"isNgContent\">\n    <ng-content></ng-content>\n</div>\n\n<masonry-layout \n    class=\"cg-wrapper\"\n    *ngIf=\"!isNgContent\" \n\n    [max-height]=\"masonryMaxHeight\" \n    [gutter]=\"masonryGutter\"\n    [masonry]=\"masonryState\"\n    [class-name]=\"'cg-image'\"\n    [images]=\"images\"\n    (events)=\"handleMasonryLayoutEvents($event)\"></masonry-layout>",
                styles: [":host{display:block;width:100%}:host .cg-wrapper{display:block;width:100%;overflow:hidden}:host .cg-wrapper.cg-show{height:auto;position:relative;display:table}:host .cg-image img{cursor:pointer;width:100%}"]
            }]
    }], function () { return [{ type: ɵngcc1.CrystalLightbox }, { type: ɵngcc0.ElementRef }]; }, { config: [{
            type: Input,
            args: ['config']
        }], images: [{
            type: Input,
            args: ['images']
        }], contentWrapper: [{
            type: ViewChild,
            args: ['contentWrapper']
        }] }); })();
    return GalleryComponent;
}());
export { GalleryComponent };
if (false) {
    /** @type {?} */
    GalleryComponent.prototype.images;
    /** @type {?} */
    GalleryComponent.prototype.config;
    /** @type {?} */
    GalleryComponent.prototype.contentWrapper;
    /** @type {?} */
    GalleryComponent.prototype.lightbox;
    /** @type {?} */
    GalleryComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsbGVyeS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5neC1jcnlzdGFsLWdhbGxlcnkvbGliL2dhbGxlcnkuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBSyxlQUFlLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRTlDO0FBRVMsSUF1Q1IsMEJBQ1MsVUFDQTtBQUFlLFFBRGYsYUFBUSxHQUFSLFFBQVE7QUFBRyxRQUNYLGVBQVUsR0FBVixVQUFVO0FBQUcsc0JBdEJZLEVBQUU7QUFFckMsS0FxQks7QUFFTCxJQXJCSSxzQkFBSSx5Q0FBVztBQUNsQjtBQUFrQjtBQUF3QjtBQUFhLFFBRHBEO0FBQWUsWUFDWCxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7QUFDcEUsU0FBSTtBQUVKO0FBQ0c7QUFBNEIsT0FIM0I7QUFFTCxJQUFJLHNCQUFJLDBDQUFZO0FBQ25CO0FBQWtCO0FBR25CO0FBQWEsUUFKVDtBQUFlLFlBQ1gsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDO0FBQ2xDLFNBQUk7QUFFSjtBQUNEO0FBQTRCLE9BSHZCO0FBRUwsSUFBSSxzQkFBSSw4Q0FBZ0I7QUFDdkI7QUFBa0I7QUFDbEI7QUFFTSxRQUpIO0FBQWUsWUFDZCxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztBQUN4QyxTQUFJO0FBRUo7QUFDRTtBQUE0QixPQUgxQjtBQUVMLElBQUksc0JBQUksMkNBQWE7QUFDcEI7QUFBa0I7QUFDZjtBQUVNLFFBSk47QUFBZSxZQUNkLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQztBQUNyQyxTQUFJO0FBRUo7QUFDYTtBQUNULE9BSkE7QUFFTDtBQUFTO0FBQ1k7QUFDaEI7QUFBb0I7QUFDeEIsSUFFQSx1Q0FBWTtBQUFRO0FBQ2I7QUFBcUI7QUFDWDtBQUFTLElBRjFCLFVBQWEsTUFBVyxFQUFFLENBQVM7QUFDbEMsUUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7QUFDN0IsUUFBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3pDLEtBQUM7QUFFRDtBQUFTO0FBQXlCO0FBQ2xCO0FBQVMsSUFEdEIsb0RBQXlCO0FBQVE7QUFDYjtBQUFvQjtBQUM1QyxJQUZJLFVBQTBCLEtBQUs7QUFDakMsUUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ25ELEtBQUksQ0FuQ007QUFBRTs2QkFsQlosU0FBUyxTQUFDLC9DQW9CUDtRQW5CSCxRQUFRLEVBQUUsaUJBQWlCLG5DQW9CSSxnQkF2QnZCLGVBQWU7c0JBSXZCLHRCQUo0QixnQkFETSxVQUFVO0FBS3BDLEVBQUUsRkFMc0M7QUFBVztBQUN4Qyx5QkFzQmYsS0FBSyxTQUFDLFFBQVE7QUFBUSx5QkFDdEIsS0FBSyxTQUFDLFFBQVE7QUFBUSxpQ0FFdEIsU0FBUyxTQUFDLGdCQUFnQjtBQUFPOzJKQVI2Qix1QkFDL0QsTUFBTSxFQUFFLENBQUM7O3FCQUFnTixDQUFDO0dBQzdOOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBTTJDO0FBQUUsMkJBMUI5QztBQUFHO0FBQU8sU0FxQkcsZ0JBQWdCO0FBRTVCO0FBQWM7QUFDWjtBQUVBO0FBQXNCO0FBRXRCO0FBQ0Q7QUFBZ0Q7QUFDaEQ7QUFHVztBQUFzQjs7O0FBakNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBMkNBLEFBQ0EsQUFDQSxBQURBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUF0QkEsQUFBQSxBQXVCQSxBQW5CQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFPQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFyREEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFhQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBbkJBLEFBQUEsQUFEQSxBQUFBLEFBdUJBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQTFCQSxBQXFCQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBFbGVtZW50UmVmLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENyeXN0YWxMaWdodGJveCB9IGZyb20nLi9kb20uc2VydmljZSdcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnY3J5c3RhbC1nYWxsZXJ5JywgXG5cdHRlbXBsYXRlOiBgPGRpdiAjY29udGVudFdyYXBwZXIgW2hpZGRlbl09XCJpc05nQ29udGVudFwiPlxuICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbjwvZGl2PlxuXG48bWFzb25yeS1sYXlvdXQgXG4gICAgY2xhc3M9XCJjZy13cmFwcGVyXCJcbiAgICAqbmdJZj1cIiFpc05nQ29udGVudFwiIFxuXG4gICAgW21heC1oZWlnaHRdPVwibWFzb25yeU1heEhlaWdodFwiIFxuICAgIFtndXR0ZXJdPVwibWFzb25yeUd1dHRlclwiXG4gICAgW21hc29ucnldPVwibWFzb25yeVN0YXRlXCJcbiAgICBbY2xhc3MtbmFtZV09XCInY2ctaW1hZ2UnXCJcbiAgICBbaW1hZ2VzXT1cImltYWdlc1wiXG4gICAgKGV2ZW50cyk9XCJoYW5kbGVNYXNvbnJ5TGF5b3V0RXZlbnRzKCRldmVudClcIj48L21hc29ucnktbGF5b3V0PmAsXG4gICAgc3R5bGVzOiBbYDpob3N0e2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJX06aG9zdCAuY2ctd3JhcHBlcntkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7b3ZlcmZsb3c6aGlkZGVufTpob3N0IC5jZy13cmFwcGVyLmNnLXNob3d7aGVpZ2h0OmF1dG87cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTp0YWJsZX06aG9zdCAuY2ctaW1hZ2UgaW1ne2N1cnNvcjpwb2ludGVyO3dpZHRoOjEwMCV9YF0sXG59KVxuZXhwb3J0IGNsYXNzIEdhbGxlcnlDb21wb25lbnQge1xuXG4gICAgQElucHV0KCdpbWFnZXMnKSBpbWFnZXM6IGFueTtcbiAgICBASW5wdXQoJ2NvbmZpZycpIGNvbmZpZzogYW55ID0ge307XG5cbiAgICBAVmlld0NoaWxkKCdjb250ZW50V3JhcHBlcicpIGNvbnRlbnRXcmFwcGVyOiBFbGVtZW50UmVmO1xuXG4gICAgZ2V0IGlzTmdDb250ZW50KCl7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRlbnRXcmFwcGVyLm5hdGl2ZUVsZW1lbnQuY2hpbGRyZW4ubGVuZ3RoID4gMDtcbiAgICB9XG5cbiAgICBnZXQgbWFzb25yeVN0YXRlKCl7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbmZpZy5tYXNvbnJ5O1xuICAgIH1cblxuICAgIGdldCBtYXNvbnJ5TWF4SGVpZ2h0KCl7XG4gICAgXHRyZXR1cm4gdGhpcy5jb25maWcubWFzb25yeU1heEhlaWdodDtcbiAgICB9XG5cbiAgICBnZXQgbWFzb25yeUd1dHRlcigpe1xuICAgIFx0cmV0dXJuIHRoaXMuY29uZmlnLm1hc29ucnlHdXR0ZXI7XG4gICAgfVxuXG5cdGNvbnN0cnVjdG9yKFxuXHRcdHByaXZhdGUgbGlnaHRib3g6IENyeXN0YWxMaWdodGJveCxcblx0XHRwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWZcblx0KSB7fVxuXG5cdHNob3dMaWdodGJveChpbWFnZXM6IGFueSwgaTogbnVtYmVyKXtcbiAgICAgICAgdGhpcy5jb25maWcuaW5kZXggPSBpO1xuXHRcdHRoaXMubGlnaHRib3gub3BlbihpbWFnZXMsIHRoaXMuY29uZmlnKTtcblx0fVxuXG4gICAgaGFuZGxlTWFzb25yeUxheW91dEV2ZW50cyhldmVudCl7XG4gICAgICAgIHRoaXMuc2hvd0xpZ2h0Ym94KHRoaXMuaW1hZ2VzLCBldmVudC5pbmRleCk7XG4gICAgfVxufSJdfQ==