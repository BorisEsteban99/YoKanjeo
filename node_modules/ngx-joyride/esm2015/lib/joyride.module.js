import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { JoyrideDirective } from './directives/joyride.directive';
import { JoyrideService } from './services/joyride.service';
import { JoyrideStepComponent } from './components/step/joyride-step.component';
import { JoyrideButtonComponent } from './components/button/button.component';
import { JoyrideCloseButtonComponent } from './components/close-button/close-button.component';
import { JoyrideStepService } from './services/joyride-step.service';
import { JoyrideBackdropService } from './services/joyride-backdrop.service';
import { JoyrideArrowComponent } from './components/arrow/arrow.component';
import { EventListenerService } from './services/event-listener.service';
import { JoyrideStepsContainerService } from './services/joyride-steps-container.service';
import { DocumentService } from './services/document.service';
import { JoyrideOptionsService } from './services/joyride-options.service';
import { StepDrawerService } from './services/step-drawer.service';
import { DomRefService } from './services/dom.service';
import { LoggerService } from './services/logger.service';
import { RouterModule } from '@angular/router';
import { TemplatesService } from './services/templates.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
export const routerModuleForChild = RouterModule.forChild([]);
export class JoyrideModule {
    static forRoot() {
        return {
            ngModule: JoyrideModule,
            providers: [
                JoyrideService,
                JoyrideStepService,
                JoyrideStepsContainerService,
                JoyrideBackdropService,
                EventListenerService,
                DocumentService,
                JoyrideOptionsService,
                StepDrawerService,
                DomRefService,
                LoggerService,
                TemplatesService,
            ],
        };
    }
    static forChild() {
        return {
            ngModule: JoyrideModule,
            providers: [],
        };
    }
}
JoyrideModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: JoyrideModule });
JoyrideModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function JoyrideModule_Factory(t) { return new (t || JoyrideModule)(); }, imports: [[CommonModule, routerModuleForChild]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(JoyrideModule, { declarations: function () { return [JoyrideDirective,
        JoyrideStepComponent,
        JoyrideArrowComponent,
        JoyrideButtonComponent,
        JoyrideCloseButtonComponent]; }, imports: function () { return [CommonModule, ɵngcc1.RouterModule]; }, exports: function () { return [JoyrideDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JoyrideModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, routerModuleForChild],
                declarations: [
                    JoyrideDirective,
                    JoyrideStepComponent,
                    JoyrideArrowComponent,
                    JoyrideButtonComponent,
                    JoyrideCloseButtonComponent,
                ],
                exports: [JoyrideDirective]
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiam95cmlkZS5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1qb3lyaWRlL3NyYy9saWIvam95cmlkZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUNoRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUM5RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUMvRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNyRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN6RSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUMxRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDOUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDM0UsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sOEJBQThCLENBQUM7OztBQUVoRSxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBNkIsWUFBWSxDQUFDLFFBQVEsQ0FDL0UsRUFBRSxDQUNMLENBQUM7QUFhRixNQUFNLE9BQU8sYUFBYTtBQUMxQixJQUFJLE1BQU0sQ0FBQyxPQUFPO0FBQU0sUUFDaEIsT0FBTztBQUNmLFlBQVksUUFBUSxFQUFFLGFBQWE7QUFDbkMsWUFBWSxTQUFTLEVBQUU7QUFDdkIsZ0JBQWdCLGNBQWM7QUFDOUIsZ0JBQWdCLGtCQUFrQjtBQUNsQyxnQkFBZ0IsNEJBQTRCO0FBQzVDLGdCQUFnQixzQkFBc0I7QUFDdEMsZ0JBQWdCLG9CQUFvQjtBQUNwQyxnQkFBZ0IsZUFBZTtBQUMvQixnQkFBZ0IscUJBQXFCO0FBQ3JDLGdCQUFnQixpQkFBaUI7QUFDakMsZ0JBQWdCLGFBQWE7QUFDN0IsZ0JBQWdCLGFBQWE7QUFDN0IsZ0JBQWdCLGdCQUFnQjtBQUNoQyxhQUFhO0FBQ2IsU0FBUyxDQUFDO0FBQ1YsSUFBSSxDQUFDO0FBQ0wsSUFBSSxNQUFNLENBQUMsUUFBUTtBQUFNLFFBQ2pCLE9BQU87QUFDZixZQUFZLFFBQVEsRUFBRSxhQUFhO0FBQ25DLFlBQVksU0FBUyxFQUFFLEVBQUU7QUFDekIsU0FBUyxDQUFDO0FBQ1YsSUFBSSxDQUFDO0FBQ0w7MkNBcENDLFFBQVEsU0FBQztRQUNOLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxvQkFBb0IsQ0FBQyxtQkFDN0MsWUFBWSxFQUFFLHVCQUNWLGdCQUFnQix1QkFDaEIsb0JBQW9CO1NBQ3BCLHFCQUFxQix1QkFDckIsc0JBQXNCLHVCQUN0QiwyQkFBMkIsb0JBQzlCO0NBQ0QsT0FBTyxFQUFFLENBQUMsZ0JBQWdCLENBQUM7Y0FDOUI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbENBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQWFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFuQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEpveXJpZGVEaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvam95cmlkZS5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBKb3lyaWRlU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvam95cmlkZS5zZXJ2aWNlJztcclxuaW1wb3J0IHsgSm95cmlkZVN0ZXBDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc3RlcC9qb3lyaWRlLXN0ZXAuY29tcG9uZW50JztcclxuaW1wb3J0IHsgSm95cmlkZUJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9idXR0b24vYnV0dG9uLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEpveXJpZGVDbG9zZUJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9jbG9zZS1idXR0b24vY2xvc2UtYnV0dG9uLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEpveXJpZGVTdGVwU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvam95cmlkZS1zdGVwLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBKb3lyaWRlQmFja2Ryb3BTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9qb3lyaWRlLWJhY2tkcm9wLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBKb3lyaWRlQXJyb3dDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYXJyb3cvYXJyb3cuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRXZlbnRMaXN0ZW5lclNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2V2ZW50LWxpc3RlbmVyLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBKb3lyaWRlU3RlcHNDb250YWluZXJTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9qb3lyaWRlLXN0ZXBzLWNvbnRhaW5lci5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRG9jdW1lbnRTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9kb2N1bWVudC5zZXJ2aWNlJztcclxuaW1wb3J0IHsgSm95cmlkZU9wdGlvbnNTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9qb3lyaWRlLW9wdGlvbnMuc2VydmljZSc7XHJcbmltcG9ydCB7IFN0ZXBEcmF3ZXJTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9zdGVwLWRyYXdlci5zZXJ2aWNlJztcclxuaW1wb3J0IHsgRG9tUmVmU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvZG9tLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBMb2dnZXJTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9sb2dnZXIuc2VydmljZSc7XHJcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IFRlbXBsYXRlc1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3RlbXBsYXRlcy5zZXJ2aWNlJztcclxuXHJcbmV4cG9ydCBjb25zdCByb3V0ZXJNb2R1bGVGb3JDaGlsZDogTW9kdWxlV2l0aFByb3ZpZGVyczxhbnk+ID0gUm91dGVyTW9kdWxlLmZvckNoaWxkKFxyXG4gICAgW11cclxuKTtcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCByb3V0ZXJNb2R1bGVGb3JDaGlsZF0sXHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBKb3lyaWRlRGlyZWN0aXZlLFxyXG4gICAgICAgIEpveXJpZGVTdGVwQ29tcG9uZW50LFxyXG4gICAgICAgIEpveXJpZGVBcnJvd0NvbXBvbmVudCxcclxuICAgICAgICBKb3lyaWRlQnV0dG9uQ29tcG9uZW50LFxyXG4gICAgICAgIEpveXJpZGVDbG9zZUJ1dHRvbkNvbXBvbmVudCxcclxuICAgIF0sXHJcbiAgICBleHBvcnRzOiBbSm95cmlkZURpcmVjdGl2ZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBKb3lyaWRlTW9kdWxlIHtcclxuICAgIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8Sm95cmlkZU1vZHVsZT4ge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5nTW9kdWxlOiBKb3lyaWRlTW9kdWxlLFxyXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICAgICAgICAgIEpveXJpZGVTZXJ2aWNlLFxyXG4gICAgICAgICAgICAgICAgSm95cmlkZVN0ZXBTZXJ2aWNlLFxyXG4gICAgICAgICAgICAgICAgSm95cmlkZVN0ZXBzQ29udGFpbmVyU2VydmljZSxcclxuICAgICAgICAgICAgICAgIEpveXJpZGVCYWNrZHJvcFNlcnZpY2UsXHJcbiAgICAgICAgICAgICAgICBFdmVudExpc3RlbmVyU2VydmljZSxcclxuICAgICAgICAgICAgICAgIERvY3VtZW50U2VydmljZSxcclxuICAgICAgICAgICAgICAgIEpveXJpZGVPcHRpb25zU2VydmljZSxcclxuICAgICAgICAgICAgICAgIFN0ZXBEcmF3ZXJTZXJ2aWNlLFxyXG4gICAgICAgICAgICAgICAgRG9tUmVmU2VydmljZSxcclxuICAgICAgICAgICAgICAgIExvZ2dlclNlcnZpY2UsXHJcbiAgICAgICAgICAgICAgICBUZW1wbGF0ZXNTZXJ2aWNlLFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgZm9yQ2hpbGQoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxKb3lyaWRlTW9kdWxlPiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbmdNb2R1bGU6IEpveXJpZGVNb2R1bGUsXHJcbiAgICAgICAgICAgIHByb3ZpZGVyczogW10sXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG4iXX0=