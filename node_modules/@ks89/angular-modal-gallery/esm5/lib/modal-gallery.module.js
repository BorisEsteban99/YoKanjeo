/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*
 The MIT License (MIT)

 Copyright (c) 2017-2018 Stefano Cappa (Ks89)

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in all
 copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DIRECTIVES } from './directives/directives';
import { COMPONENTS, ModalGalleryComponent, CarouselComponent } from './components/components';
import { KEYBOARD_CONFIGURATION, KeyboardService } from './services/keyboard.service';
import { HAMMER_GESTURE_CONFIG, HammerGestureConfig } from '@angular/platform-browser';
// to prevent bad scrolling behaviour on mobile phone with carousels.
// From @mohaxspb (https://github.com/Ks89/angular-modal-gallery/pull/187)
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './components/background/background.component';
import * as ɵngcc2 from './components/plain-gallery/plain-gallery.component';
import * as ɵngcc3 from './components/modal-gallery/modal-gallery.component';
import * as ɵngcc4 from './components/carousel/carousel.component';
import * as ɵngcc5 from './components/carousel/carousel-previews/carousel-previews.component';
import * as ɵngcc6 from './components/upper-buttons/upper-buttons.component';
import * as ɵngcc7 from './components/dots/dots.component';
import * as ɵngcc8 from './components/previews/previews.component';
import * as ɵngcc9 from './components/current-image/current-image.component';
import * as ɵngcc10 from './components/current-image/loading-spinner/loading-spinner.component';
import * as ɵngcc11 from './components/accessible.component';
import * as ɵngcc12 from './directives/click-outside.directive';
import * as ɵngcc13 from './directives/size.directive';
import * as ɵngcc14 from './directives/keyboard-navigation.directive';
import * as ɵngcc15 from './directives/wrap.directive';
import * as ɵngcc16 from './directives/direction.directive';
import * as ɵngcc17 from './directives/a-tag-bg-image.directive';
import * as ɵngcc18 from './directives/description.directive';
import * as ɵngcc19 from './directives/margin.directive';
import * as ɵngcc20 from './directives/max-size.directive';
var 
// to prevent bad scrolling behaviour on mobile phone with carousels.
// From @mohaxspb (https://github.com/Ks89/angular-modal-gallery/pull/187)
KsHammerGestureConfig = /** @class */ (function (_super) {
    tslib_1.__extends(KsHammerGestureConfig, _super);
    function KsHammerGestureConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @param {?} element
     * @return {?}
     */
    KsHammerGestureConfig.prototype.buildHammer = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        return new Hammer(element, {
            touchAction: 'pan-y'
        });
    };
KsHammerGestureConfig.ɵfac = function KsHammerGestureConfig_Factory(t) { return ɵKsHammerGestureConfig_BaseFactory(t || KsHammerGestureConfig); };
KsHammerGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: KsHammerGestureConfig, factory: function (t) { return KsHammerGestureConfig.ɵfac(t); } });
var ɵKsHammerGestureConfig_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(KsHammerGestureConfig);
    return KsHammerGestureConfig;
}(HammerGestureConfig));
// to prevent bad scrolling behaviour on mobile phone with carousels.
// From @mohaxspb (https://github.com/Ks89/angular-modal-gallery/pull/187)
export { KsHammerGestureConfig };
/**
 * Module to import it in the root module of your application.
 */
var GalleryModule = /** @class */ (function () {
    function GalleryModule() {
    }
    /**
     * Importing with '.forRoot()' is deprecated. I'll provide a new way to do this in next releases.
     * Will be removed in 8.0.0 or 9.0.0
     */
    /**
     * Importing with '.forRoot()' is deprecated. I'll provide a new way to do this in next releases.
     * Will be removed in 8.0.0 or 9.0.0
     * @param {?=} config
     * @return {?}
     */
    GalleryModule.forRoot = /**
     * Importing with '.forRoot()' is deprecated. I'll provide a new way to do this in next releases.
     * Will be removed in 8.0.0 or 9.0.0
     * @param {?=} config
     * @return {?}
     */
    function (config) {
        return {
            ngModule: GalleryModule,
            providers: [
                {
                    provide: KEYBOARD_CONFIGURATION,
                    useValue: config ? config : {}
                },
                {
                    provide: KeyboardService,
                    useFactory: setupKeyboardService,
                    deps: [KEYBOARD_CONFIGURATION]
                }
            ]
        };
    };
GalleryModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: GalleryModule });
GalleryModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function GalleryModule_Factory(t) { return new (t || GalleryModule)(); }, providers: [
        {
            provide: HAMMER_GESTURE_CONFIG,
            useClass: KsHammerGestureConfig
        }
    ], imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GalleryModule, { declarations: function () { return [ɵngcc1.BackgroundComponent, ɵngcc2.PlainGalleryComponent, ɵngcc3.ModalGalleryComponent, ɵngcc4.CarouselComponent, ɵngcc5.CarouselPreviewsComponent, ɵngcc6.UpperButtonsComponent, ɵngcc7.DotsComponent, ɵngcc8.PreviewsComponent, ɵngcc9.CurrentImageComponent, ɵngcc10.LoadingSpinnerComponent, ɵngcc11.AccessibleComponent, ɵngcc12.ClickOutsideDirective, ɵngcc13.SizeDirective, ɵngcc14.KeyboardNavigationDirective, ɵngcc15.WrapDirective, ɵngcc16.DirectionDirective, ɵngcc17.ATagBgImageDirective, ɵngcc18.DescriptionDirective, ɵngcc19.MarginDirective, ɵngcc20.MaxSizeDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ModalGalleryComponent, CarouselComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GalleryModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [COMPONENTS, DIRECTIVES],
                exports: [ModalGalleryComponent, CarouselComponent],
                providers: [
                    {
                        provide: HAMMER_GESTURE_CONFIG,
                        useClass: KsHammerGestureConfig
                    }
                ]
            }]
    }], function () { return []; }, null); })();
    return GalleryModule;
}());
export { GalleryModule };
/**
 * Function to setup the keyboard service inside the `forRoot` method.
 * @param {?} injector
 * @return {?} KeyboardService an instance of the `KeyboardService`
 */
export function setupKeyboardService(injector) {
    return new KeyboardService(injector);
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtZ2FsbGVyeS5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIkBrczg5L2FuZ3VsYXItbW9kYWwtZ2FsbGVyeS9saWIvbW9kYWwtZ2FsbGVyeS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdCQSxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3JELE9BQU8sRUFBRSxVQUFVLEVBQUUscUJBQXFCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUMvRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsZUFBZSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFdEYsT0FBTyxFQUFFLHFCQUFxQixFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDdkY7QUFDcUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFckU7QUFBSztBQUNLO0FBRUk7QUFNYSxJQVRnQixpREFBbUI7QUFBQyxJQUEvRDtBQUFtQztBQUU5QixJQUlMLENBQUM7QUFDRDtBQUVHO0FBQTBCO0FBQW1CO0FBQVEsSUFSdEQsMkNBQVc7QUFBTztBQUNaO0FBQW1CO0FBQ3pCLElBRkEsVUFBWSxPQUFvQjtBQUNsQyxRQUFJLE9BQU8sSUFBSSxNQUFNLENBQUMsT0FBTyxFQUFFO0FBQy9CLFlBQU0sV0FBVyxFQUFFLE9BQU87QUFDMUIsU0FBSyxDQUFDLENBQUM7QUFDUCxJQUFFLENBQUM7OzsyR0FDSDtBQUFDLElBQUQsNEJBQUM7QUFBRCxDQUFDLEFBTkQsQ0FBMkMsbUJBQW1CLEdBTTdEO0FBQ0Q7QUFHRTtBQUdnQztBQUNSO0FBQUk7QUFHYjtBQU5qQjtBQUVVLElBRlY7QUFDZSxJQStCZixDQUFDO0FBQ0QsSUFyQkU7QUFDRjtBQUNFO0FBQ0UsT0FBQztBQUNMO0FBQVE7QUFFRTtBQUVUO0FBQ2dCO0FBQW1CO0FBQ25DLElBTlEscUJBQU87QUFBTztBQUVFO0FBR25CO0FBQTBCO0FBQ3hCO0FBQVEsSUFOZCxVQUFlLE1BQThCO0FBQUksUUFDL0MsT0FBTztBQUNYLFlBQU0sUUFBUSxFQUFFLGFBQWE7QUFDN0IsWUFBTSxTQUFTLEVBQUU7QUFDakIsZ0JBQVE7QUFDUixvQkFBVSxPQUFPLEVBQUUsc0JBQXNCO0FBQ3pDLG9CQUFVLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUN4QyxpQkFBUztBQUNULGdCQUFRO0FBQ1Isb0JBQVUsT0FBTyxFQUFFLGVBQWU7QUFDbEMsb0JBQVUsVUFBVSxFQUFFLG9CQUFvQjtBQUMxQyxvQkFBVSxJQUFJLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztBQUN4QyxpQkFBUztBQUNULGFBQU87QUFDUCxTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7aURBL0JGLFFBQVEsU0FBQztpQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsc0JBQ3ZCLFlBQVksRUFBRSxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsc0JBQ3RDLE9BQU8sRUFBRSxDQUFDOztBQUFxQixFQUFFLGlCQUFpQixDQUFDLHNCQUNuRDtPQUFTLEVBQUUsMEJBQ1Q7O1dBQ0UsT0FBTyxFQUFFO0lBQXFCLDhCQUM5QixRQUFRLEVBQUUscUJBQXFCLDBCQUNoQyxzQkFDRixrQkFDRjs7Ozs7Ozs7Ozs7Ozs7Z0RBQ1E7QUFBQyxJQXFCVixvQkFBQztBQUVELENBRkMsQUFoQ0QsSUFnQ0M7QUFDRCxTQXRCYSxhQUFhO0FBQ3pCO0FBQUk7QUFDaUU7QUFBdUI7QUFHN0U7QUF1QmhCLE1BQU0sVUFBVSxvQkFBb0IsQ0FBQyxRQUErQjtBQUFJLElBQ3RFLE9BQU8sSUFBSSxlQUFlLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDdkMsQ0FBQztBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiBUaGUgTUlUIExpY2Vuc2UgKE1JVClcblxuIENvcHlyaWdodCAoYykgMjAxNy0yMDE4IFN0ZWZhbm8gQ2FwcGEgKEtzODkpXG5cbiBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbiB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcblxuIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbFxuIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG5cbiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTiBJTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFXG4gU09GVFdBUkUuXG4gKi9cblxuaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IERJUkVDVElWRVMgfSBmcm9tICcuL2RpcmVjdGl2ZXMvZGlyZWN0aXZlcyc7XG5pbXBvcnQgeyBDT01QT05FTlRTLCBNb2RhbEdhbGxlcnlDb21wb25lbnQsIENhcm91c2VsQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgS0VZQk9BUkRfQ09ORklHVVJBVElPTiwgS2V5Ym9hcmRTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9rZXlib2FyZC5zZXJ2aWNlJztcbmltcG9ydCB7IEtleWJvYXJkU2VydmljZUNvbmZpZyB9IGZyb20gJy4vbW9kZWwva2V5Ym9hcmQtc2VydmljZS1jb25maWcuaW50ZXJmYWNlJztcbmltcG9ydCB7IEhBTU1FUl9HRVNUVVJFX0NPTkZJRywgSGFtbWVyR2VzdHVyZUNvbmZpZyB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuXG4vLyB0byBwcmV2ZW50IGJhZCBzY3JvbGxpbmcgYmVoYXZpb3VyIG9uIG1vYmlsZSBwaG9uZSB3aXRoIGNhcm91c2Vscy5cbi8vIEZyb20gQG1vaGF4c3BiIChodHRwczovL2dpdGh1Yi5jb20vS3M4OS9hbmd1bGFyLW1vZGFsLWdhbGxlcnkvcHVsbC8xODcpXG5leHBvcnQgY2xhc3MgS3NIYW1tZXJHZXN0dXJlQ29uZmlnIGV4dGVuZHMgSGFtbWVyR2VzdHVyZUNvbmZpZyB7XG4gIGJ1aWxkSGFtbWVyKGVsZW1lbnQ6IEhUTUxFbGVtZW50KSB7XG4gICAgcmV0dXJuIG5ldyBIYW1tZXIoZWxlbWVudCwge1xuICAgICAgdG91Y2hBY3Rpb246ICdwYW4teSdcbiAgICB9KTtcbiAgfVxufVxuXG4vKipcbiAqIE1vZHVsZSB0byBpbXBvcnQgaXQgaW4gdGhlIHJvb3QgbW9kdWxlIG9mIHlvdXIgYXBwbGljYXRpb24uXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtDT01QT05FTlRTLCBESVJFQ1RJVkVTXSxcbiAgZXhwb3J0czogW01vZGFsR2FsbGVyeUNvbXBvbmVudCwgQ2Fyb3VzZWxDb21wb25lbnRdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBIQU1NRVJfR0VTVFVSRV9DT05GSUcsXG4gICAgICB1c2VDbGFzczogS3NIYW1tZXJHZXN0dXJlQ29uZmlnXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEdhbGxlcnlNb2R1bGUge1xuICAvKipcbiAgICogSW1wb3J0aW5nIHdpdGggJy5mb3JSb290KCknIGlzIGRlcHJlY2F0ZWQuIEknbGwgcHJvdmlkZSBhIG5ldyB3YXkgdG8gZG8gdGhpcyBpbiBuZXh0IHJlbGVhc2VzLlxuICAgKiBXaWxsIGJlIHJlbW92ZWQgaW4gOC4wLjAgb3IgOS4wLjBcbiAgICovXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZz86IEtleWJvYXJkU2VydmljZUNvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8R2FsbGVyeU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogR2FsbGVyeU1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogS0VZQk9BUkRfQ09ORklHVVJBVElPTixcbiAgICAgICAgICB1c2VWYWx1ZTogY29uZmlnID8gY29uZmlnIDoge31cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IEtleWJvYXJkU2VydmljZSxcbiAgICAgICAgICB1c2VGYWN0b3J5OiBzZXR1cEtleWJvYXJkU2VydmljZSxcbiAgICAgICAgICBkZXBzOiBbS0VZQk9BUkRfQ09ORklHVVJBVElPTl1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH07XG4gIH1cbn1cblxuLyoqXG4gKiBGdW5jdGlvbiB0byBzZXR1cCB0aGUga2V5Ym9hcmQgc2VydmljZSBpbnNpZGUgdGhlIGBmb3JSb290YCBtZXRob2QuXG4gKiBAcGFyYW0gS2V5Ym9hcmRTZXJ2aWNlQ29uZmlnIGluamVjdG9yIGlzIGFuIGludGVyZmFjZSBvZiB0eXBlIGBLZXlib2FyZFNlcnZpY2VDb25maWdgIHRvIHBhc3MgZGF0YSB0byBLZXlib2FyZFNlcnZpY2VcbiAqIEByZXR1cm5zIEtleWJvYXJkU2VydmljZSBhbiBpbnN0YW5jZSBvZiB0aGUgYEtleWJvYXJkU2VydmljZWBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldHVwS2V5Ym9hcmRTZXJ2aWNlKGluamVjdG9yOiBLZXlib2FyZFNlcnZpY2VDb25maWcpOiBLZXlib2FyZFNlcnZpY2Uge1xuICByZXR1cm4gbmV3IEtleWJvYXJkU2VydmljZShpbmplY3Rvcik7XG59XG4iXX0=